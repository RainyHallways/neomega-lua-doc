import{_ as n,c as s,o as a,a as p}from"./app-DJ6fbNhj.js";const t={},e=p(`<h2 id="跨插件通信和-api-调用相关-api" tabindex="-1"><a class="header-anchor" href="#跨插件通信和-api-调用相关-api"><span>跨插件通信和 API 调用相关 API</span></a></h2><h2 id="跨插件写入值" tabindex="-1"><a class="header-anchor" href="#跨插件写入值"><span>跨插件写入值</span></a></h2><ul><li>soft_set(key,val) <ul><li>范围：任意</li><li>说明：向 omega 写入值，值可以被跨进程、跨插件读取，且不会随着框架崩溃消失 (只有在机器人退出才会消失)</li><li>考虑到这是跨进程的，其速度并不是很快</li><li>参数： <ul><li>key: 名字，必须为 string</li><li>val: 值，必须为 string</li></ul></li><li>返回：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">soft_set</span><span class="token punctuation">(</span><span class="token string">&quot;status/my_plugin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="跨插件读取值" tabindex="-1"><a class="header-anchor" href="#跨插件读取值"><span>跨插件读取值</span></a></h2><ul><li>soft_get(key) <ul><li>范围：任意</li><li>说明：向 omega 读取值，值可以被跨进程、跨插件读取，且不会随着框架崩溃消失 (只有在机器人退出才会消失)</li><li>考虑到这是跨进程的，其速度并不是很快</li><li>参数： <ul><li>key: 名字，必须为 string</li></ul></li><li>返回：val,found</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> hashed_server_code<span class="token punctuation">,</span>found<span class="token operator">=</span>coromega<span class="token punctuation">:</span><span class="token function">soft_get</span><span class="token punctuation">(</span><span class="token string">&quot;HashedServerCode&quot;</span><span class="token punctuation">)</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;hashed_server_code&quot;</span><span class="token punctuation">,</span>hashed_server_code<span class="token punctuation">)</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;found&quot;</span><span class="token punctuation">,</span>found<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">local</span> status<span class="token operator">=</span>coromega<span class="token punctuation">:</span><span class="token function">soft_get</span><span class="token punctuation">(</span><span class="token string">&quot;status/my_plugin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;status: &quot;</span><span class="token punctuation">,</span>status<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="发送跨插件消息" tabindex="-1"><a class="header-anchor" href="#发送跨插件消息"><span>发送跨插件消息</span></a></h3><ul><li>publish_info(topic,data) <ul><li>范围：任意</li><li>说明：向指定 topic 发送数据 (data), topic 是跨插件的，所有订阅该 topic 的插件都能收到 data</li><li>参数： <ul><li>topic: 字符串形式的话题名</li><li>data: 任意，只要能被 json.encode 正确处理即可</li></ul></li><li>返回：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">publish_info</span><span class="token punctuation">(</span><span class="token string">&quot;/send_time/1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    send_time <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    disp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;time 1: %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="接收-订阅跨插件消息" tabindex="-1"><a class="header-anchor" href="#接收-订阅跨插件消息"><span>接收/订阅跨插件消息</span></a></h3><ul><li>when_new_data_in_subscribed_topic_named(topic) <ul><li>范围：任意</li><li>说明：订阅一个指定 topic, topic 是跨插件的，当该 topic 下有新消息时，一个协程被创建并在其中运行指定的函数</li><li>参数： <ul><li>topic: 字符串形式的话题名</li></ul></li><li>返回：监听器，监听器内的处理函数的参数为 topic 下的新数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_new_data_in_subscribed_topic_named</span><span class="token punctuation">(</span><span class="token string">&quot;/send_time/1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>disp<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>send_time<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="暴露跨插件-api" tabindex="-1"><a class="header-anchor" href="#暴露跨插件-api"><span>暴露跨插件 API</span></a></h3><ul><li>when_called_by_api_named(api_name,set_result) <ul><li>范围：任意</li><li>说明：以 api_name 暴露一个跨插件 api, 当该 api 被调用时，一个协程被创建并在其中运行指定的 api 函数</li><li>参数： <ul><li>api_name: 字符串形式的跨插件 api 名</li><li>set_result: 设置返回结果和错误（若不使用则使用函数的返回值）</li></ul></li><li>返回：监听器，监听器内的处理函数的参数为： <ul><li>调用参数</li><li>返回函数：当返回函数被调用时，调用者将收到调用结果，返回函数最多只能被调用一次</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> set_result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token function">set_result</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 不使用 set_result 则函数的返回将作为结果</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> result</span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 可以设置错误</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> set_result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token function">set_result</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;divide by zero!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        <span class="token keyword">local</span> result <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token function">set_result</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">nil</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 可以返回错误</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> set_result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;divide by zero!&quot;</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        <span class="token keyword">local</span> result <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token keyword">return</span> result<span class="token punctuation">,</span> <span class="token keyword">nil</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="调用跨插件-api" tabindex="-1"><a class="header-anchor" href="#调用跨插件-api"><span>调用跨插件 API</span></a></h3><ul><li>call_other_plugin_api(api_name, args,timeout) <ul><li>范围：协程内</li><li>说明：调用具有 api_name 的跨插件 api，调用参数为 args, 并返回调用结果</li><li>参数： <ul><li>api_name: 字符串形式的跨插件 api 名</li><li>args: 可以被 json.encode 处理的参数</li><li>timeout: 超时，当超时时，返回 nil,&quot;context deadline exceeded&quot;</li></ul></li><li>返回：调用结果，错误</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> result<span class="token punctuation">,</span>err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/add&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;result: %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--3</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;err: &quot;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span> <span class="token comment">--nil</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 可以忽略错误</span></span>
<span class="line"><span class="token keyword">local</span> result <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/add&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;result: %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--3</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">local</span> result<span class="token punctuation">,</span>err <span class="token operator">=</span> coroemga<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/very/time/consuming&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0.0001</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;result: &quot;</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span> <span class="token comment">-- nil</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;error: &quot;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span> <span class="token comment">-- &quot;context deadline exceeded&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">local</span> result<span class="token punctuation">,</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;result: %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--0</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;err: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>                  <span class="token comment">--divide by zero!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="调用无返回的插件-api" tabindex="-1"><a class="header-anchor" href="#调用无返回的插件-api"><span>调用无返回的插件 API</span></a></h3><ul><li>call_other_plugin_api_no_result(api_name, args) <ul><li>范围：任意</li><li>说明：调用具有 api_name 的跨插件 api，调用参数为 args, 但不等待调用结果</li><li>参数： <ul><li>api_name: 字符串形式的跨插件 api 名</li><li>args: 可以被 json.encode 处理的参数</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api_no_result</span><span class="token punctuation">(</span><span class="token string">&quot;/time/set&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="综合使用" tabindex="-1"><a class="header-anchor" href="#综合使用"><span>综合使用</span></a></h2><p>caller</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> omega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;omega&quot;</span><span class="token punctuation">)</span></span>
<span class="line">package<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;%s;%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span></span>
<span class="line">    package<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">    omega<span class="token punctuation">.</span>storage_path<span class="token punctuation">.</span><span class="token function">get_code_path</span><span class="token punctuation">(</span><span class="token string">&quot;LuaLoader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?.lua&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> coromega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;coromega&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>omega<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> json <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_new_data_in_subscribed_topic_named</span><span class="token punctuation">(</span><span class="token string">&quot;/send_time/1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>disp<span class="token punctuation">,</span> <span class="token string">&quot;now add money&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api_no_result</span><span class="token punctuation">(</span><span class="token string">&quot;/money/add&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_new_data_in_subscribed_topic_named</span><span class="token punctuation">(</span><span class="token string">&quot;/send_time/2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>disp<span class="token punctuation">,</span> <span class="token string">&quot;now check and add money&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">local</span> money <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/money/check&quot;</span><span class="token punctuation">,</span> <span class="token keyword">nil</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;money is [%d]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token function">tonumber</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">local</span> money <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/money/add&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;after add 100 money, now money is %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">local</span> time_after5s <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">call_other_plugin_api</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/add&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> data<span class="token punctuation">.</span>send_time<span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;will be called at [%d] next time&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token function">tonumber</span><span class="token punctuation">(</span>time_after5s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>provider</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> omega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;omega&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> json <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span></span>
<span class="line">package<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;%s;%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span></span>
<span class="line">    package<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">    omega<span class="token punctuation">.</span>storage_path<span class="token punctuation">.</span><span class="token function">get_code_path</span><span class="token punctuation">(</span><span class="token string">&quot;LuaLoader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?.lua&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> coromega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;coromega&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>omega<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token keyword">true</span> <span class="token keyword">do</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">publish_info</span><span class="token punctuation">(</span><span class="token string">&quot;/send_time/1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">            send_time <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            disp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;time 1: %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token keyword">true</span> <span class="token keyword">do</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">publish_info</span><span class="token punctuation">(</span><span class="token string">&quot;/send_time/2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">            send_time <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            disp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;time 2: %d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">local</span> total_money <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/money/check&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> set_result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">set_result</span><span class="token punctuation">(</span>total_money<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/money/add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> set_result<span class="token punctuation">)</span></span>
<span class="line">    total_money <span class="token operator">=</span> total_money <span class="token operator">+</span> args</span>
<span class="line">    <span class="token function">set_result</span><span class="token punctuation">(</span>total_money<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_api_named</span><span class="token punctuation">(</span><span class="token string">&quot;/calculator/add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> set_result<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token function">set_result</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),o=[e];function l(c,i){return a(),s("div",null,o)}const k=n(t,[["render",l],["__file","跨插件api调用.html.vue"]]),r=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/%E8%B7%A8%E6%8F%92%E4%BB%B6api%E8%B0%83%E7%94%A8/%E8%B7%A8%E6%8F%92%E4%BB%B6api%E8%B0%83%E7%94%A8.html","title":"跨插件通信","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"跨插件通信","description":"跨插件通信示例"},"headers":[{"level":2,"title":"跨插件通信和 API 调用相关 API","slug":"跨插件通信和-api-调用相关-api","link":"#跨插件通信和-api-调用相关-api","children":[]},{"level":2,"title":"跨插件写入值","slug":"跨插件写入值","link":"#跨插件写入值","children":[]},{"level":2,"title":"跨插件读取值","slug":"跨插件读取值","link":"#跨插件读取值","children":[{"level":3,"title":"发送跨插件消息","slug":"发送跨插件消息","link":"#发送跨插件消息","children":[]},{"level":3,"title":"接收/订阅跨插件消息","slug":"接收-订阅跨插件消息","link":"#接收-订阅跨插件消息","children":[]},{"level":3,"title":"暴露跨插件 API","slug":"暴露跨插件-api","link":"#暴露跨插件-api","children":[]},{"level":3,"title":"调用跨插件 API","slug":"调用跨插件-api","link":"#调用跨插件-api","children":[]},{"level":3,"title":"调用无返回的插件 API","slug":"调用无返回的插件-api","link":"#调用无返回的插件-api","children":[]}]},{"level":2,"title":"综合使用","slug":"综合使用","link":"#综合使用","children":[]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/跨插件api调用/跨插件api调用.md"}');export{k as comp,r as data};
