import{_ as n,c as s,o as a,a as e}from"./app-DJ6fbNhj.js";const l={},t=e(`<h1 id="system" tabindex="-1"><a class="header-anchor" href="#system"><span>system</span></a></h1><h2 id="在终端显示信息" tabindex="-1"><a class="header-anchor" href="#在终端显示信息"><span>在终端显示信息</span></a></h2><ul><li>print(...) <ul><li>范围：任意</li><li>说明：在终端显示信息，会试图使内容尽量可读，即使包含不可转为字符串的内容</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;在终端显示: &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="字符串mc颜色转换" tabindex="-1"><a class="header-anchor" href="#字符串mc颜色转换"><span>字符串MC颜色转换</span></a></h2><ul><li>sprint(...) <ul><li>范围：任意</li><li>说明：获取转换MC颜色代码后的字符串，使其能在终端显示相应颜色的信息</li><li>参数：... 为任意参数</li><li>返回值：color_msg 颜色格式化后的信息</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> color_msg <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">sprint</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;§l§b%s §r§o§e%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">print</span><span class="token punctuation">(</span>color_msg<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="记录日志" tabindex="-1"><a class="header-anchor" href="#记录日志"><span>记录日志</span></a></h2><ul><li>log(...) <ul><li>范围：任意</li><li>说明：在日志中记录信息，会试图使内容尽量可读，即使包含不可转为字符串的内容</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;记录日志: &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="在终端显示信息并记录日志" tabindex="-1"><a class="header-anchor" href="#在终端显示信息并记录日志"><span>在终端显示信息并记录日志</span></a></h2><ul><li>log_and_print(...) <ul><li>范围：任意</li><li>说明：在终端显示信息并记录日志，会试图使内容尽量可读，即使包含不可转为字符串的内容</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token string">&quot;在终端显示并记录日志: &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="以-debug-最低级别-在终端显示信息或记录日志" tabindex="-1"><a class="header-anchor" href="#以-debug-最低级别-在终端显示信息或记录日志"><span>以 DEBUG(最低级别) 在终端显示信息或记录日志</span></a></h2><ul><li>debug_out(...) <ul><li>范围：任意</li><li>说明：在终端显示信息并记录日志，会试图使内容尽量可读，即使包含不可转为字符串的内容， 默认不会显示或记录日志，除非在配置中将 DEBUG 的显示级别设为终端或日志 显示和日志的前缀将包含 [DEBUG]</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">debug_out</span><span class="token punctuation">(</span><span class="token string">&quot;不会显示或记录日志，除非在配置中将 DEBUG 的显示级别设为 终端或日志: &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="以-info-较低级别-在终端显示信息或记录日志" tabindex="-1"><a class="header-anchor" href="#以-info-较低级别-在终端显示信息或记录日志"><span>以 INFO(较低级别) 在终端显示信息或记录日志</span></a></h2><ul><li>info_out(...) <ul><li>范围：任意</li><li>说明：默认在终端显示并记录日志，除非调整框架配置中的 INFO 显示级别 (在最后几行) 显示和日志不包含前缀</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">info_out</span><span class="token punctuation">(</span><span class="token string">&quot;不会显示或记录日志，除非在配置中将 DEBUG 的显示级别设为 终端或日志: &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="以-success-级别在终端显示信息或记录日志" tabindex="-1"><a class="header-anchor" href="#以-success-级别在终端显示信息或记录日志"><span>以 SUCCESS 级别在终端显示信息或记录日志</span></a></h2><ul><li>success_out(...) <ul><li>范围：任意</li><li>说明：添加绿色的修饰，默认在终端显示并记录日志，除非调整框架配置中的 Success 显示级别 (在最后几行)</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">success_out</span><span class="token punctuation">(</span><span class="token string">&quot;添加绿色的修饰，默认在终端显示并记录日志，除非调整框架配置中的 Success 显示级别 (在最后几行): &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="以-warning-级别在终端显示信息或记录日志" tabindex="-1"><a class="header-anchor" href="#以-warning-级别在终端显示信息或记录日志"><span>以 WARNING 级别在终端显示信息或记录日志</span></a></h2><ul><li>warning_out(...) <ul><li>范围：任意</li><li>说明：添加黄色的修饰，默认在终端显示并记录日志，除非调整框架配置中的 Warning 显示级别 (在最后几行)</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">warning_out</span><span class="token punctuation">(</span><span class="token string">&quot;添加黄色的修饰，默认在终端显示并记录日志，除非调整框架配置中的 Warning 显示级别 (在最后几行): &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="以-error-级别在终端显示信息或记录日志" tabindex="-1"><a class="header-anchor" href="#以-error-级别在终端显示信息或记录日志"><span>以 ERROR 级别在终端显示信息或记录日志</span></a></h2><ul><li>error_out(...) <ul><li>范围：任意</li><li>说明：添加红色的修饰，默认在终端显示并记录日志，除非调整框架配置中的 Error 显示级别 (在最后几行)</li><li>参数：... 为任意参数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">error_out</span><span class="token punctuation">(</span><span class="token string">&quot;添加红色的修饰，默认在终端显示并记录日志，除非调整框架配置中的 Error 显示级别 (在最后几行): &quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="从终端获取输入" tabindex="-1"><a class="header-anchor" href="#从终端获取输入"><span>从终端获取输入</span></a></h2><ul><li>input(hint,timeout) <ul><li>范围：协程内</li><li>说明：从终端获取输入，末尾的换行符号 (&quot;\\n&quot;) 会被移除</li><li>参数：hint 为提示信息</li><li>参数：timeout 为输入超时 (超时时会获得空输入)</li><li>返回值：输入的内容</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> input1 <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">local</span> input2 <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">,</span><span class="token number">3.1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>backend_input(hint,timeout) <ul><li>范围：协程内</li><li>说明：从终端获取输入，效果和 input 完全相同</li><li>参数：hint 为提示信息</li><li>参数：timeout 为输入超时 (超时时会获得空输入)</li><li>返回值：输入的内容</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> input1 <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">backend_input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">local</span> input2 <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">backend_input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">,</span><span class="token number">3.1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统架构信息" tabindex="-1"><a class="header-anchor" href="#系统架构信息"><span>系统架构信息</span></a></h2><ul><li>os() <ul><li>范围：任意</li><li>说明：获取操作系统和架构信息，例如 &quot;linux-amd64&quot;</li><li>参数：... 为任意参数</li><li>返回值：字符串形式的操作系统和架构信息</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> system_and_arch <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">os</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="获取当前目录" tabindex="-1"><a class="header-anchor" href="#获取当前目录"><span>获取当前目录</span></a></h2><ul><li>current_dir() <ul><li>范围：任意</li><li>说明：获取当前目录</li><li>参数：无</li><li>返回值：当前目录</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> current_dir <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">current_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="创建目录" tabindex="-1"><a class="header-anchor" href="#创建目录"><span>创建目录</span></a></h2><ul><li>make_dir(path) <ul><li>范围：任意</li><li>说明：创建目录</li><li>参数：path 为目录地址</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">make_dir</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="创建临时目录" tabindex="-1"><a class="header-anchor" href="#创建临时目录"><span>创建临时目录</span></a></h2><ul><li>make_temp_dir() <ul><li>范围：任意</li><li>说明：创建临时目录 这个目录会在 omega 框架退出时或重启时自动删除 由 neomega 保证这个目录内文件有可执行权限和其他权限 <blockquote><p>安卓的 Download 目录，即 neomega 在安卓上的默认目录没有可执行权限</p></blockquote></li><li>参数：无</li><li>返回值：临时目录地址</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">make_temp_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="获取当前时间" tabindex="-1"><a class="header-anchor" href="#获取当前时间"><span>获取当前时间</span></a></h2><ul><li>now() <ul><li>范围：任意</li><li>说明：获取当前时间 单位秒 (unix time)</li><li>参数：无</li><li>返回值：当前时间</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>now_unix() <ul><li>范围：任意</li><li>说明：获取当前时间 单位秒 (unix time), 同 now()</li><li>参数：无</li><li>返回值：当前时间</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">now_unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="获取插件启动时间" tabindex="-1"><a class="header-anchor" href="#获取插件启动时间"><span>获取插件启动时间</span></a></h2><ul><li>now_since_start() <ul><li>范围：任意</li><li>说明：从插件启动开始的时间单位秒</li><li>参数：无</li><li>返回值：当前时间</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">now_since_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="睡眠-休眠、暂停" tabindex="-1"><a class="header-anchor" href="#睡眠-休眠、暂停"><span>睡眠（休眠、暂停）</span></a></h2><ul><li>sleep(time) <ul><li>范围：任意</li><li>说明：睡眠</li><li>参数：time 为睡眠时间 单位秒。当时间过短时，可能会因为系统原因导致 sleep 时间不精确</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="创建协程" tabindex="-1"><a class="header-anchor" href="#创建协程"><span>创建协程</span></a></h2><ul><li>start_new(func) <ul><li>范围：任意</li><li>说明：在一个新的协程中开始执行指定的函数</li><li>参数：没有输入也没有输出的函数</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;running in a new coroutine!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="暂停协程" tabindex="-1"><a class="header-anchor" href="#暂停协程"><span>暂停协程</span></a></h2><ul><li>pause() &amp; get_resume() <ul><li>范围：协程内</li><li>说明：pause 暂停一个协程，直到 get_resume() 获取的回执获得结果</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;running in coroutine 1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">local</span> resumable<span class="token operator">=</span>coromega<span class="token punctuation">:</span><span class="token function">get_resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">          coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;running in coroutine 2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">          coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;coroutine 2 sleep 3s&quot;</span><span class="token punctuation">)</span></span>
<span class="line">          coromega<span class="token punctuation">:</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span></span>
<span class="line">          coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;coroutine 2 awake&quot;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token function">resumable</span><span class="token punctuation">(</span><span class="token string">&quot;2401&quot;</span><span class="token punctuation">)</span></span>
<span class="line">          coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;coroutine 2 exit&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;coroutine 1 paused!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">local</span> ret<span class="token operator">=</span>coromega<span class="token punctuation">:</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;coroutine 1 resumed, with ret %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;coroutine 1 exit&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使能协程" tabindex="-1"><a class="header-anchor" href="#使能协程"><span>使能协程</span></a></h2><ul><li>run() <ul><li>范围：任意</li><li>说明：使能协程，完成 go 到 lua 的数据推送转协程恢复，一般在插件最后一行</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;这行永远不会被运行&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="失能协程" tabindex="-1"><a class="header-anchor" href="#失能协程"><span>失能协程</span></a></h2><ul><li>halt() <ul><li>范围：任意</li><li>说明：失能协程，打断 go 到 lua 的数据推送转协程恢复，调用后所有挂起的协程都不再恢复，可认为插件已经无效</li><li>返回值：无</li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  coromega<span class="token punctuation">:</span><span class="token function">halt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,68),i=[t];function p(o,u){return a(),s("div",null,i)}const r=n(l,[["render",p],["__file","coromega_system.html.vue"]]),d=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/system/coromega_system.html","title":"系统功能","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"系统功能","description":"系统功能示例"},"headers":[{"level":2,"title":"在终端显示信息","slug":"在终端显示信息","link":"#在终端显示信息","children":[]},{"level":2,"title":"字符串MC颜色转换","slug":"字符串mc颜色转换","link":"#字符串mc颜色转换","children":[]},{"level":2,"title":"记录日志","slug":"记录日志","link":"#记录日志","children":[]},{"level":2,"title":"在终端显示信息并记录日志","slug":"在终端显示信息并记录日志","link":"#在终端显示信息并记录日志","children":[]},{"level":2,"title":"以 DEBUG(最低级别) 在终端显示信息或记录日志","slug":"以-debug-最低级别-在终端显示信息或记录日志","link":"#以-debug-最低级别-在终端显示信息或记录日志","children":[]},{"level":2,"title":"以 INFO(较低级别) 在终端显示信息或记录日志","slug":"以-info-较低级别-在终端显示信息或记录日志","link":"#以-info-较低级别-在终端显示信息或记录日志","children":[]},{"level":2,"title":"以 SUCCESS 级别在终端显示信息或记录日志","slug":"以-success-级别在终端显示信息或记录日志","link":"#以-success-级别在终端显示信息或记录日志","children":[]},{"level":2,"title":"以 WARNING 级别在终端显示信息或记录日志","slug":"以-warning-级别在终端显示信息或记录日志","link":"#以-warning-级别在终端显示信息或记录日志","children":[]},{"level":2,"title":"以 ERROR 级别在终端显示信息或记录日志","slug":"以-error-级别在终端显示信息或记录日志","link":"#以-error-级别在终端显示信息或记录日志","children":[]},{"level":2,"title":"从终端获取输入","slug":"从终端获取输入","link":"#从终端获取输入","children":[]},{"level":2,"title":"系统架构信息","slug":"系统架构信息","link":"#系统架构信息","children":[]},{"level":2,"title":"获取当前目录","slug":"获取当前目录","link":"#获取当前目录","children":[]},{"level":2,"title":"创建目录","slug":"创建目录","link":"#创建目录","children":[]},{"level":2,"title":"创建临时目录","slug":"创建临时目录","link":"#创建临时目录","children":[]},{"level":2,"title":"获取当前时间","slug":"获取当前时间","link":"#获取当前时间","children":[]},{"level":2,"title":"获取插件启动时间","slug":"获取插件启动时间","link":"#获取插件启动时间","children":[]},{"level":2,"title":"睡眠（休眠、暂停）","slug":"睡眠-休眠、暂停","link":"#睡眠-休眠、暂停","children":[]},{"level":2,"title":"创建协程","slug":"创建协程","link":"#创建协程","children":[]},{"level":2,"title":"暂停协程","slug":"暂停协程","link":"#暂停协程","children":[]},{"level":2,"title":"使能协程","slug":"使能协程","link":"#使能协程","children":[]},{"level":2,"title":"失能协程","slug":"失能协程","link":"#失能协程","children":[]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/system/coromega_system.md"}');export{r as comp,d as data};
