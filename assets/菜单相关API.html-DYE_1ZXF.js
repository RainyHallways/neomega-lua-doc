import{_ as n,c as s,o as a,a as p}from"./app-DJ6fbNhj.js";const t={},o=p(`<h1 id="菜单相关-api" tabindex="-1"><a class="header-anchor" href="#菜单相关-api"><span>菜单相关 API</span></a></h1><h2 id="设置后台-终端-菜单" tabindex="-1"><a class="header-anchor" href="#设置后台-终端-菜单"><span>设置后台 (终端) 菜单</span></a></h2><ul><li>when_called_by_terminal_menu(options) <ul><li>范围：协程外</li><li>说明：在后台 (终端) 中添加一个菜单入口，当菜单被触发时，启动一个新的协程并运行指定处理函数</li><li>参数：option, 其结构为 <ul><li>triggers: 触发词字符串列表，当输入符合其中任意一个时，菜单被触发，在后台输入？时显示第一个字符串</li><li>argument_hint: 字符串，无实际影响，在渲染中起参数提示作用</li><li>usage: 字符串，无实际影响，在渲染中起功能提示作用</li></ul></li><li>返回：监听器，监听器的处理函数的参数为被切割 (按空格切割) 后，且去除触发词的输入</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_terminal_menu</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    triggers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;coro&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_cmd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_term_cmd&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    argument_hint <span class="token operator">=</span> <span class="token string">&quot;[cmd]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    usage <span class="token operator">=</span> <span class="token string">&quot;coro_test&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> cmd <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">then</span></span>
<span class="line">        cmd <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">backend_input</span><span class="token punctuation">(</span><span class="token string">&quot;please input cmd: &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">send_ws_cmd</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd result: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="设置游戏菜单" tabindex="-1"><a class="header-anchor" href="#设置游戏菜单"><span>设置游戏菜单</span></a></h2><ul><li>when_called_by_game_menu(options) <ul><li>范围：协程外</li><li>说明：在游戏中 neomega 菜单 中添加一个菜单入口，当菜单被触发时，启动一个新的协程并运行指定处理函数</li><li>参数：option, 其结构为 <ul><li>triggers: 触发词字符串列表，当输入符合其中任意一个时，菜单被触发，当唤起游戏菜单时显示第一个字符串</li><li>argument_hint: 字符串，无实际影响，在渲染中起参数提示作用</li><li>usage: 字符串，无实际影响，在渲染中起功能提示作用</li></ul></li><li>返回：监听器，监听器的处理函数的参数为 chat 对象</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_game_menu</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    triggers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;coro&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_cmd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_game_cmd&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    argument_hint <span class="token operator">=</span> <span class="token string">&quot;[cmd]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    usage <span class="token operator">=</span> <span class="token string">&quot;coro_test&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> cmd <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> player <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_player</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span>cmd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">do</span></span>
<span class="line">        <span class="token keyword">local</span> chat <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">ask</span><span class="token punctuation">(</span><span class="token string">&quot;请输入命令：&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        cmd <span class="token operator">=</span> chat<span class="token punctuation">.</span>raw_msg</span>
<span class="line">        <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">then</span></span>
<span class="line">            player<span class="token punctuation">:</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;命令不能为空&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">send_ws_cmd</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line">    player<span class="token punctuation">:</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd result: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="综合使用" tabindex="-1"><a class="header-anchor" href="#综合使用"><span>综合使用</span></a></h2><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> omega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;omega&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> json <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span></span>
<span class="line">package<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;%s;%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span></span>
<span class="line">    package<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">    omega<span class="token punctuation">.</span>storage_path<span class="token punctuation">.</span><span class="token function">get_code_path</span><span class="token punctuation">(</span><span class="token string">&quot;LuaLoader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?.lua&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> coromega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;coromega&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>omega<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_terminal_menu</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    triggers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;coro&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;命令&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_cmd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_term_cmd&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    argument_hint <span class="token operator">=</span> <span class="token string">&quot;[cmd]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    usage <span class="token operator">=</span> <span class="token string">&quot;发送命令&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> cmd <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">then</span></span>
<span class="line">        cmd <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">backend_input</span><span class="token punctuation">(</span><span class="token string">&quot;please input cmd: &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">send_ws_cmd</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd result: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_game_menu</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    triggers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;coro&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;命令&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_cmd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coro_game_cmd&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    argument_hint <span class="token operator">=</span> <span class="token string">&quot;[cmd]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    usage <span class="token operator">=</span> <span class="token string">&quot;发送命令&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> cmd <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> player <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_player</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span>cmd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token keyword">do</span></span>
<span class="line">        <span class="token keyword">local</span> chat <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">ask</span><span class="token punctuation">(</span><span class="token string">&quot;请输入命令: &quot;</span><span class="token punctuation">)</span></span>
<span class="line">        cmd <span class="token operator">=</span> chat<span class="token punctuation">.</span>raw_msg</span>
<span class="line">        <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">then</span></span>
<span class="line">            player<span class="token punctuation">:</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;命令不能为空&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> result <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">send_ws_cmd</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line">    player<span class="token punctuation">:</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;cmd result: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[o];function e(l,u){return a(),s("div",null,c)}const k=n(t,[["render",e],["__file","菜单相关API.html.vue"]]),r=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/%E8%8F%9C%E5%8D%95%E7%9B%B8%E5%85%B3API/%E8%8F%9C%E5%8D%95%E7%9B%B8%E5%85%B3API.html","title":"菜单","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"菜单","description":"菜单示例"},"headers":[{"level":2,"title":"设置后台 (终端) 菜单","slug":"设置后台-终端-菜单","link":"#设置后台-终端-菜单","children":[]},{"level":2,"title":"设置游戏菜单","slug":"设置游戏菜单","link":"#设置游戏菜单","children":[]},{"level":2,"title":"综合使用","slug":"综合使用","link":"#综合使用","children":[]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/菜单相关API/菜单相关API.md"}');export{k as comp,r as data};
