import{_ as n,c as s,o as a,a as t}from"./app-DJ6fbNhj.js";const o={},p=t(`<h2 id="扔出指定快捷栏的物品" tabindex="-1"><a class="header-anchor" href="#扔出指定快捷栏的物品"><span>扔出指定快捷栏的物品</span></a></h2><ul><li>drop_item(slot) <ul><li>范围：协程内</li><li>说明：机器人扔出指定快捷栏中的物品，如果对应快捷栏没有物品则会报错</li><li>参数： <ul><li>slot: number类型，要扔出的物品所在快捷栏的槽位号（可选0~8）</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">drop_item</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="生成物品到指定快捷栏" tabindex="-1"><a class="header-anchor" href="#生成物品到指定快捷栏"><span>生成物品到指定快捷栏</span></a></h2><ul><li>make_item(item_info, slot_id, anvil_pos, container_pos) <ul><li>范围：协程内</li><li>说明：机器人根据数据制作物品放到自己的指定快捷栏中</li><li>参数： <ul><li>item_info: string类型，物品nbt的<code>json.encode(nbt:to_table())</code>形式</li><li>slot_id: number类型，要放入的快捷栏的槽位号（可选0~8）</li><li>anvil_pos: table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，制作的物品如果要用到铁砧（如命名、附魔），将在该坐标生成临时的铁砧</li><li>container_pos: table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，制作的物品如果要对容器操作（如含物品的潜影盒），将在该坐标生成临时的容器</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> data <span class="token operator">=</span> <span class="token string">[[{&quot;name&quot;:&quot;white_shulker_box&quot;,&quot;val&quot;:0,&quot;is_block&quot;:true,&quot;display_name&quot;:&quot;hihi2&quot;,&quot;block_bedrock_state_string&quot;:&quot;[]&quot;,&quot;complex_block_data&quot;:{&quot;container&quot;:{&quot;0&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:writable_book&quot;,&quot;val&quot;:0,&quot;is_block&quot;:false,&quot;specific_known_item_data&quot;:{&quot;pages&quot;:[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]}},&quot;count&quot;:1},&quot;1&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:written_book&quot;,&quot;val&quot;:0,&quot;is_block&quot;:false,&quot;specific_known_item_data&quot;:{&quot;pages&quot;:[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],&quot;book_author&quot;:&quot;无名之人&quot;,&quot;book_name&quot;:&quot;有名之书&quot;}},&quot;count&quot;:1},&quot;2&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:written_book&quot;,&quot;val&quot;:0,&quot;is_block&quot;:false,&quot;specific_known_item_data&quot;:{&quot;pages&quot;:[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],&quot;book_author&quot;:&quot;无名之人&quot;,&quot;book_name&quot;:&quot;有名之书&quot;},&quot;display_name&quot;:&quot;铁砧&quot;},&quot;count&quot;:1}}}}]]</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">make_item</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="移动物品" tabindex="-1"><a class="header-anchor" href="#移动物品"><span>移动物品</span></a></h2><ul><li><p>move_item(source_slot, target_slot, count)</p><ul><li>范围：协程内</li><li>说明：机器人将指定物品栏（快捷栏或者背包）中的物品移动到其他物品栏（快捷栏或者背包）中</li><li>参数： <ul><li>source_slot：number类型，要移出的物品所在快捷栏槽位号（可选0~8）</li><li>target_slot：number类型，要移入的快捷栏槽位号（可选0~8）</li><li>count：number类型，移动的物品的数量</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">move_item</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">-- 将第一格快捷栏中的物品移动一格到背包第一格</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>move_item_to_container(container_pos, move_operations)</p><ul><li>范围：协程内</li><li>说明：机器人将指定物品栏（快捷栏或者背包）中的物品放入指定容器的指定格子中，可能的错误信息如下： <ul><li>当容器坐标没有容器时会返回错误；</li><li>当任一对应的物品栏中没有物品时会返回错误并取消当前请求的所有物品栏移动（即使其他格子符合要求）；</li><li>格子槽位号超出范围时会返回错误；</li></ul></li><li>参数： <ul><li>container_pos: table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，容器的坐标</li><li>move_operations：table&lt;number,number&gt;类型，表示背包格子号到容器格子号的映射</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> move_operations<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token comment">-- 0号快捷栏移动到容器第1格</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token comment">-- 9号背包栏移动到容器第2格</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">move_item_to_container</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span><span class="token punctuation">,</span> move_operations<span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="物品改名" tabindex="-1"><a class="header-anchor" href="#物品改名"><span>物品改名</span></a></h2><ul><li>rename_item(anvil_pos, slot, new_name, auto_gen_anvil) <ul><li>范围：协程内</li><li>说明：机器人将指定快捷栏中的物品改名</li><li>参数： <ul><li>anvil_pos: table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，改名将在这个位置使用铁砧</li><li>slot：number类型，快捷栏槽位号（可选0~8）</li><li>new_name：string类型，新名字</li><li>auto_gen_anvil：boolean类型，表示如果坐标处没有铁砧会不会自动生成</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">rename_item</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;line1\\nline2\\nline3&quot;</span><span class="token punctuation">,</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="物品附魔" tabindex="-1"><a class="header-anchor" href="#物品附魔"><span>物品附魔</span></a></h2><ul><li>enchant_item(slot, enchants) <ul><li>范围：协程内</li><li>说明：机器人将指定快捷栏中的物品附魔</li><li>参数： <ul><li>slot：number类型，快捷栏槽位号（可选0~8）</li><li>enchants：table&lt;number,number&gt;类型，要附魔附魔的效果ID及其对应的等级，附魔效果id如下： <table><thead><tr><th>编号</th><th>附魔效果</th></tr></thead><tbody><tr><td>0</td><td>保护</td></tr><tr><td>1</td><td>火焰保护</td></tr><tr><td>2</td><td>摔落缓冲</td></tr><tr><td>3</td><td>爆炸保护</td></tr><tr><td>4</td><td>弹射物保护</td></tr><tr><td>5</td><td>荆棘</td></tr><tr><td>6</td><td>水下呼吸</td></tr><tr><td>7</td><td>深海探索者</td></tr><tr><td>8</td><td>水下速掘</td></tr><tr><td>9</td><td>锋利</td></tr><tr><td>10</td><td>亡灵杀手</td></tr><tr><td>11</td><td>节肢杀手</td></tr><tr><td>12</td><td>击退</td></tr><tr><td>13</td><td>火焰附加</td></tr><tr><td>14</td><td>抢夺</td></tr><tr><td>15</td><td>效率</td></tr><tr><td>16</td><td>精准采集</td></tr><tr><td>17</td><td>耐久</td></tr><tr><td>18</td><td>时运</td></tr><tr><td>19</td><td>力量</td></tr><tr><td>20</td><td>冲击</td></tr><tr><td>21</td><td>火矢</td></tr><tr><td>22</td><td>无限</td></tr><tr><td>23</td><td>海之眷顾</td></tr><tr><td>24</td><td>饵钓</td></tr><tr><td>25</td><td>冰霜行者</td></tr><tr><td>26</td><td>经验修补</td></tr><tr><td>27</td><td>绑定诅咒</td></tr><tr><td>28</td><td>消失诅咒</td></tr><tr><td>29</td><td>穿刺</td></tr><tr><td>30</td><td>激流</td></tr><tr><td>31</td><td>忠诚</td></tr><tr><td>32</td><td>引雷</td></tr><tr><td>33</td><td>多重射击</td></tr><tr><td>34</td><td>穿透</td></tr><tr><td>35</td><td>快速装填</td></tr><tr><td>36</td><td>灵魂疾行</td></tr><tr><td>37</td><td>迅捷潜行</td></tr><tr><td>如果输入非上述数字则视为效果<code>魔咒</code>。</td><td></td></tr></tbody></table></li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">enchant_item</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token comment">-- 将物品附魔1级节肢克星</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>   <span class="token comment">-- 将物品附魔2级击退</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="使用物品" tabindex="-1"><a class="header-anchor" href="#使用物品"><span>使用物品</span></a></h2><ul><li>use_item(slot) <ul><li>范围：协程内</li><li>说明：机器人将使用指定快捷栏中的物品</li><li>参数： <ul><li>slot：number类型，快捷栏槽位号（可选0~8）</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">use_item</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="对方块使用物品" tabindex="-1"><a class="header-anchor" href="#对方块使用物品"><span>对方块使用物品</span></a></h2><ul><li><p>use_item_on_block(block_pos, face, slot, blockNEMCRuntimeID)</p><ul><li>范围：协程内</li><li>说明：机器人将对方块使用指定快捷栏中的物品</li><li>参数： <ul><li>block_pos：table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，目标方块坐标</li><li>face：number类型，方块的哪一面 <table><thead><tr><th>面编号</th><th>方向</th></tr></thead><tbody><tr><td>0</td><td>y-</td></tr><tr><td>1</td><td>y+</td></tr><tr><td>2</td><td>z-</td></tr><tr><td>3</td><td>z+</td></tr><tr><td>4</td><td>x-</td></tr><tr><td>5</td><td>x+</td></tr></tbody></table></li><li>slot：number类型，快捷栏槽位号（可选0~8）</li><li>blockNEMCRuntimeID：number|nil类型，目标方块的runtimeid，如果不提供则coromega将自动获得，缺点是比提供了runtimeid的运行速度慢不少</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">use_item_on_block</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">56</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>use_item_on_block_with_bot_offset(block_pos, bot_offset, face, slot, blockNEMCRuntimeID)</p><ul><li>范围：协程内</li><li>说明：机器人将在指定的偏移位置对方块使用指定快捷栏中的物品</li><li>参数： <ul><li>block_pos：table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，目标方块坐标</li><li>bot_offset：table类型坐标，形如<code>{x=-6,y=-60,z=-24}</code>，机器人偏移坐标</li><li>face：number类型，方块的哪一面 <table><thead><tr><th>面编号</th><th>方向</th></tr></thead><tbody><tr><td>0</td><td>y-</td></tr><tr><td>1</td><td>y+</td></tr><tr><td>2</td><td>z-</td></tr><tr><td>3</td><td>z+</td></tr><tr><td>4</td><td>x-</td></tr><tr><td>5</td><td>x+</td></tr></tbody></table></li><li>slot：number类型，快捷栏槽位号（可选0~8）</li><li>blockNEMCRuntimeID：number|nil类型，目标方块的runtimeid，如果不提供则coromega将自动获得，缺点是比提供了runtimeid的运行速度慢不少</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">use_item_on_block_with_bot_offset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">56</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="获取目标坐标的方块到对应快捷栏" tabindex="-1"><a class="header-anchor" href="#获取目标坐标的方块到对应快捷栏"><span>获取目标坐标的方块到对应快捷栏</span></a></h2><ul><li>pick_block(block_pos, target_hotbar, retry_times) <ul><li>范围：协程内</li><li>说明：机器人从指定坐标获取方块并放入对应的快捷栏</li><li>参数： <ul><li>block_pos: table&lt;string,number&gt;类型，方块坐标</li><li>target_hotbar: number类型，快捷物品栏格子号（可选0~8）</li><li>retry_times: number类型，失败重试次数</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> block_position <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">pick_block</span><span class="token punctuation">(</span>block_position<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="主手切换" tabindex="-1"><a class="header-anchor" href="#主手切换"><span>主手切换</span></a></h2><ul><li>select_hotbar(slot) <ul><li>范围：协程内</li><li>说明：机器人将主手切换到指定的快捷栏格子</li><li>参数： <ul><li>slot: number类型，快捷物品栏格子号（可选0~8）</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">select_hotbar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="破坏方块并拾取掉落物" tabindex="-1"><a class="header-anchor" href="#破坏方块并拾取掉落物"><span>破坏方块并拾取掉落物</span></a></h2><ul><li>break_and_pick_block(block_pos, slot, recover_block, retry_times) <ul><li>范围：协程内</li><li>说明：机器人破坏指定坐标的方块并将掉落物品拾取到对应的快捷栏</li><li>参数： <ul><li>block_pos: table&lt;string,number&gt;类型，方块坐标</li><li>slot: number类型，快捷物品栏格子号（可选0~8）</li><li>recover_block: boolean类型，是否恢复方块</li><li>retry_times: number类型，失败重试次数</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> block_position <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">break_and_pick_block</span><span class="token punctuation">(</span>block_position<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="获取指定物品栏内物品的信息" tabindex="-1"><a class="header-anchor" href="#获取指定物品栏内物品的信息"><span>获取指定物品栏内物品的信息</span></a></h2><ul><li>get_inventory_content(slot, windows) <ul><li>范围：任意</li><li>说明：机器人获取指定物品栏槽位内物品的信息</li><li>参数： <ul><li>slot: number类型，物品栏槽位号（可选0~8）</li><li>windows: number|nil类型，指定窗口，不指定默认为0</li></ul></li><li>返回：table类型的物品信息, boolean类型表示是否成功获取</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> item_info<span class="token punctuation">,</span> success <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_inventory_content</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> success <span class="token keyword">then</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;物品信息：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>item_info<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">else</span></span>
<span class="line">      coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;获取物品信息失败&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="设置结构方块的内容" tabindex="-1"><a class="header-anchor" href="#设置结构方块的内容"><span>设置结构方块的内容</span></a></h2><ul><li>set_structure_block_data(block_pos, settings) <ul><li>范围：任意</li><li>说明：机器人设置指定坐标的结构方块的内容</li><li>参数： <ul><li>block_pos: table&lt;string,number&gt;类型，方块坐标</li><li>settings: table&lt;string,any&gt;类型，nbt表，用于设置结构方块的内容</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> block_position <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">set_structure_block_data</span><span class="token punctuation">(</span>block_position<span class="token punctuation">,</span> structure_settings<span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="对指定位置下的容器放置内容" tabindex="-1"><a class="header-anchor" href="#对指定位置下的容器放置内容"><span>对指定位置下的容器放置内容</span></a></h2><ul><li>set_container_content(container_pos, container_data_json) <ul><li>范围：协程内</li><li>说明：机器人对指定位置下的容器放置内容</li><li>参数： <ul><li>container_pos: table类型，容器位置</li><li>container_data_json: string类型，容器内容（参见下述章节了解如何生成）</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> container_position <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">set_container_content</span><span class="token punctuation">(</span>container_position<span class="token punctuation">,</span> container_data<span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="根据内容写成书放到对应快捷栏" tabindex="-1"><a class="header-anchor" href="#根据内容写成书放到对应快捷栏"><span>根据内容写成书放到对应快捷栏</span></a></h2><ul><li>write_book(slotID, pages, title, author) <ul><li>范围：协程内</li><li>说明：机器人根据内容写成书并放到对应的快捷栏</li><li>参数： <ul><li>slotID: number类型，快捷物品栏格子号</li><li>pages: string[]类型，每页内容</li><li>title: string类型，书名</li><li>author: string类型，作者名</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> slot_id <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">  <span class="token keyword">local</span> pages_content <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string">&quot;这是第一页的内容。&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string">&quot;这是第二页的内容。&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string">&quot;这是第三页的内容。&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> book_title <span class="token operator">=</span> <span class="token string">&quot;我的书&quot;</span></span>
<span class="line">  <span class="token keyword">local</span> book_author <span class="token operator">=</span> <span class="token string">&quot;无名作者&quot;</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">write_book</span><span class="token punctuation">(</span>slot_id<span class="token punctuation">,</span> pages_content<span class="token punctuation">,</span> book_title<span class="token punctuation">,</span> book_author<span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="物品展示框放入物品" tabindex="-1"><a class="header-anchor" href="#物品展示框放入物品"><span>物品展示框放入物品</span></a></h2><ul><li>place_item_frame_item(block_pos, slotID) <ul><li>范围：协程内</li><li>说明：机器人将指定快捷栏中的物品放入指定坐标的物品展示框</li><li>参数： <ul><li>block_pos: table类型，物品展示框位置</li><li>slotID: integer类型，快捷物品栏格子号</li><li>rotation: integer类型，旋转角度, 可采用的值有 0,1,2,3... 或者 0,45,90,135 等, 小于 45 的值会被 *45 处理</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> item_frame_position <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> slot_id <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">  <span class="token keyword">local</span> rotation<span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">-- 1 或者 45 或者 2 或者 90, 小于 45 的值会被*45处理</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">place_item_frame_item</span><span class="token punctuation">(</span>item_frame_position<span class="token punctuation">,</span> slot_id<span class="token punctuation">,</span>rotation<span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="生成内容类型的容器" tabindex="-1"><a class="header-anchor" href="#生成内容类型的容器"><span>生成内容类型的容器</span></a></h2><ul><li>gen_container(pos, container_data_json, container_block) <ul><li>范围：协程内</li><li>说明：机器人在指定位置生成指定类型的容器，并放入指定内容</li><li>参数： <ul><li>pos: table类型，放置位置</li><li>container_data_json: string类型，容器内容（参见 bot action 章节了解如何生成）</li><li>container_block: string类型，容器方块名</li></ul></li><li>返回：string类型报错信息|nil</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> container_position <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">local</span> container_block_name <span class="token operator">=</span> <span class="token string">&quot;chest [\\&quot;facing_direction\\&quot;=4]&quot;</span></span>
<span class="line">  <span class="token keyword">local</span> err <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">gen_container</span><span class="token punctuation">(</span>container_position<span class="token punctuation">,</span> container_data<span class="token punctuation">,</span> container_block_name<span class="token punctuation">)</span></span>
<span class="line">  coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;运行结果：%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>err <span class="token keyword">or</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="容器支持" tabindex="-1"><a class="header-anchor" href="#容器支持"><span>容器支持</span></a></h3><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> omega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;omega&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> json <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">--- @type Coromega</span></span>
<span class="line"><span class="token keyword">local</span> coromega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;coromega&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>omega<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 如果你需要调试请将下面一段解除注释，关于调试的方法请参考文档</span></span>
<span class="line"><span class="token comment">-- local dbg = require(&#39;emmy_core&#39;)</span></span>
<span class="line"><span class="token comment">-- dbg.tcpConnect(&#39;localhost&#39;, 9966)</span></span>
<span class="line"><span class="token comment">-- print(&quot;waiting...&quot;)</span></span>
<span class="line"><span class="token comment">-- for i=1,1000 do -- 调试器需要一些时间来建立连接并交换所有信息</span></span>
<span class="line"><span class="token comment">--     -- 如果始终无法命中断点，你可以尝试将 1000 改的更大</span></span>
<span class="line"><span class="token comment">--     print(&quot;.&quot;)</span></span>
<span class="line"><span class="token comment">-- end</span></span>
<span class="line"><span class="token comment">-- print(&quot;end&quot;)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 容器支持</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_terminal_menu</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    triggers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;chest&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    argument_hint <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    usage <span class="token operator">=</span> <span class="token string">&quot;chest&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 假设在 1036，102，1038 处有一个 nbt 方块，我们要先读出来</span></span>
<span class="line">    <span class="token keyword">local</span> move_bot<span class="token operator">=</span><span class="token keyword">true</span> <span class="token comment">-- 机器人读取前自动移动到附近</span></span>
<span class="line">    <span class="token comment">-- 读取这片区域 (只有1格)</span></span>
<span class="line">    <span class="token keyword">local</span> canvas <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">request_structure</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">1036</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">102</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">1038</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 这片区域的起点是? -- {&quot;x&quot;:1036,&quot;y&quot;:102,&quot;z&quot;:1038}</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>canvas<span class="token punctuation">:</span><span class="token function">get_start_pos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 这个方块是什么?</span></span>
<span class="line">    <span class="token keyword">local</span> block_runtime_id<span class="token punctuation">,</span>found <span class="token operator">=</span>canvas<span class="token punctuation">:</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">1036</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">102</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">1038</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">not</span> found <span class="token keyword">then</span></span>
<span class="line">        <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;没有方块! 获取失败!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span> </span>
<span class="line">    <span class="token keyword">local</span> block_name<span class="token punctuation">,</span> block_state <span class="token operator">=</span> omega<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">rtid_to_block_name_and_state</span><span class="token punctuation">(</span>block_runtime_id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 方块名=chest 方块属性=[&quot;facing_direction&quot;=4]</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;方块名=%s 方块属性=%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>block_name<span class="token punctuation">,</span> block_state<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 这个方块有nbt吗?</span></span>
<span class="line">    <span class="token keyword">local</span> block_runtime_id<span class="token punctuation">,</span>nbt<span class="token punctuation">,</span>found <span class="token operator">=</span>canvas<span class="token punctuation">:</span><span class="token function">block_with_nbt</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">1036</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">102</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">1038</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> nbt<span class="token punctuation">:</span><span class="token function">is_empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">then</span> </span>
<span class="line">        <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;nbt 是空的! &quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span> </span>
<span class="line">    <span class="token comment">-- nbt 里有什么?</span></span>
<span class="line">    <span class="token comment">-- {&quot;Findable&quot;: 0b, &quot;IsIgnoreShuffle&quot;: 0b, &quot;IsOpened&quot;: 1b, &quot;Items&quot;: [{&quot;Block&quot;: {&quot;name&quot;: &quot;minecraft:stone&quot;, &quot;states&quot;: {&quot;stone_type&quot;: &quot;stone&quot;}, &quot;val&quot;: 0s, &quot;version&quot;: 18090528}, &quot;CanDestroy&quot;: [&quot;minecraft:sand&quot;], &quot;CanPlaceOn&quot;: [&quot;minecraft:grass&quot;, &quot;minecraft:stone&quot;], &quot;Count&quot;: 5b, &quot;Damage&quot;: 0s, &quot;Name&quot;: &quot;minecraft:stone&quot;, &quot;Slot&quot;: 0b, &quot;WasPickedUp&quot;: 0b}, {&quot;CanDestroy&quot;: [&quot;minecraft:sand&quot;], &quot;CanPlaceOn&quot;: [&quot;minecraft:grass&quot;, &quot;minecraft:stone&quot;], &quot;Count&quot;: 1b, &quot;Damage&quot;: 0s, &quot;Name&quot;: &quot;minecraft:diamond_sword&quot;, &quot;Slot&quot;: 1b, &quot;WasPickedUp&quot;: 0b, &quot;tag&quot;: {&quot;Damage&quot;: 0, &quot;RepairCost&quot;: 0, &quot;display&quot;: {&quot;Name&quot;: &quot;剑1&quot;}, &quot;minecraft:keep_on_death&quot;: 1b}}, {&quot;Block&quot;: {&quot;name&quot;: &quot;minecraft:white_shulker_box&quot;, &quot;states&quot;: {}, &quot;val&quot;: 0s, &quot;version&quot;: 18090528}, &quot;Count&quot;: 1b, &quot;Damage&quot;: 0s, &quot;Name&quot;: &quot;minecraft:white_shulker_box&quot;, &quot;Slot&quot;: 2b, &quot;WasPickedUp&quot;: 0b, &quot;tag&quot;: {&quot;Items&quot;: [{&quot;Count&quot;: 1b, &quot;Damage&quot;: 0s, &quot;Name&quot;: &quot;minecraft:writable_book&quot;, &quot;Slot&quot;: 0b, &quot;WasPickedUp&quot;: 0b, &quot;tag&quot;: {&quot;pages&quot;: [{&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}, {&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}, {&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}]}}, {&quot;Count&quot;: 1b, &quot;Damage&quot;: 0s, &quot;Name&quot;: &quot;minecraft:written_book&quot;, &quot;Slot&quot;: 1b, &quot;WasPickedUp&quot;: 0b, &quot;tag&quot;: {&quot;author&quot;: &quot;无名之人&quot;, &quot;generation&quot;: 0, &quot;pages&quot;: [{&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}, {&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}, {&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}], &quot;title&quot;: &quot;有名之书&quot;, &quot;xuid&quot;: &quot;&quot;}}, {&quot;Count&quot;: 1b, &quot;Damage&quot;: 0s, &quot;Name&quot;: &quot;minecraft:written_book&quot;, &quot;Slot&quot;: 2b, &quot;WasPickedUp&quot;: 0b, &quot;tag&quot;: {&quot;RepairCost&quot;: 0, &quot;author&quot;: &quot;无名之人&quot;, &quot;display&quot;: {&quot;Name&quot;: &quot;铁砧&quot;}, &quot;generation&quot;: 0, &quot;pages&quot;: [{&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}, {&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}, {&quot;photoname&quot;: &quot;&quot;, &quot;text&quot;: &quot;0&quot;}], &quot;title&quot;: &quot;有名之书&quot;, &quot;xuid&quot;: &quot;&quot;}}]}}], &quot;id&quot;: &quot;Chest&quot;, &quot;isMovable&quot;: 1b, &quot;x&quot;: 1036, &quot;y&quot;: 102, &quot;z&quot;: 1038}</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>nbt<span class="token punctuation">:</span><span class="token function">to_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- 那么，关键是，我该如何才能有效的对它操作?</span></span>
<span class="line">    <span class="token comment">-- 首先，为了让各位使用起来变得容易，我们后面的api全部使用 json 字符串，</span></span>
<span class="line">    <span class="token comment">-- 但是这种还不行，因为它会丢失信息，所以我们必须将其转换成支持的格式的 json 字符串，这样信息就不会丢失了 </span></span>
<span class="line">    <span class="token comment">-- 而支持的 nbt 目前包括: 容器、告示牌、展示框、命令块, 它们的 support type 分别是 container_data,sign_data,item_data,command_block_data</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">local</span> supported_json_str<span class="token punctuation">,</span>aux_info<span class="token punctuation">,</span>support_type<span class="token operator">=</span>nbt<span class="token punctuation">:</span><span class="token function">to_supported_json</span><span class="token punctuation">(</span>block_runtime_id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> support_type<span class="token operator">==</span><span class="token string">&quot;fail&quot;</span> <span class="token keyword">then</span> </span>
<span class="line">        <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;不行,这种nbt,不支持&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;支持类型为: &quot;</span><span class="token punctuation">,</span>support_type<span class="token punctuation">)</span> <span class="token comment">-- container_data</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    <span class="token comment">-- 只有展示框的旋转才会输出在 aux_info 中，aux_info 不然都是空的</span></span>
<span class="line">    <span class="token comment">-- supported_json_str 长啥样? {&quot;0&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;stone&quot;,&quot;val&quot;:0,&quot;base_props&quot;:{&quot;can_place_on&quot;:[&quot;minecraft:grass&quot;,&quot;minecraft:stone&quot;],&quot;can_destroy&quot;:[&quot;minecraft:sand&quot;]},&quot;is_block&quot;:true,&quot;block_bedrock_state_string&quot;:&quot;[\\&quot;stone_type\\&quot;=\\&quot;stone\\&quot;]&quot;},&quot;count&quot;:5},&quot;1&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:diamond_sword&quot;,&quot;val&quot;:0,&quot;base_props&quot;:{&quot;can_place_on&quot;:[&quot;minecraft:grass&quot;,&quot;minecraft:stone&quot;],&quot;can_destroy&quot;:[&quot;minecraft:sand&quot;],&quot;keep_on_death&quot;:true},&quot;is_block&quot;:false,&quot;display_name&quot;:&quot;剑1&quot;},&quot;count&quot;:1},&quot;2&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;white_shulker_box&quot;,&quot;val&quot;:0,&quot;is_block&quot;:true,&quot;block_bedrock_state_string&quot;:&quot;[]&quot;,&quot;complex_block_data&quot;:{&quot;container&quot;:{&quot;0&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:writable_book&quot;,&quot;val&quot;:0,&quot;is_block&quot;:false,&quot;specific_known_item_data&quot;:{&quot;pages&quot;:[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]}},&quot;count&quot;:1},&quot;1&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:written_book&quot;,&quot;val&quot;:0,&quot;is_block&quot;:false,&quot;specific_known_item_data&quot;:{&quot;pages&quot;:[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],&quot;book_author&quot;:&quot;无名之人&quot;,&quot;book_name&quot;:&quot;有名之书&quot;}},&quot;count&quot;:1},&quot;2&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;minecraft:written_book&quot;,&quot;val&quot;:0,&quot;is_block&quot;:false,&quot;specific_known_item_data&quot;:{&quot;pages&quot;:[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],&quot;book_author&quot;:&quot;无名之人&quot;,&quot;book_name&quot;:&quot;有名之书&quot;},&quot;display_name&quot;:&quot;铁砧&quot;},&quot;count&quot;:1}}}},&quot;count&quot;:1}}</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>supported_json_str<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- wow, 不是很好读对吗? 没关系, 你可以用这个:</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>coromega<span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>supported_json_str<span class="token punctuation">,</span><span class="token string">&quot;container_data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- 容器内容:</span></span>
<span class="line">    <span class="token comment">--  5个 石头[特殊值=0] 物品方块属性:[&quot;stone_type&quot;=&quot;stone&quot;]</span></span>
<span class="line">    <span class="token comment">--  |  -基础属性:</span></span>
<span class="line">    <span class="token comment">--  |   可被放置于:  草方块 石头</span></span>
<span class="line">    <span class="token comment">--  1个 钻石剑[特殊值=0]</span></span>
<span class="line">    <span class="token comment">--  |  -基础属性:</span></span>
<span class="line">    <span class="token comment">--  |   可被放置于:  草方块 石头</span></span>
<span class="line">    <span class="token comment">--  |   死亡时保留</span></span>
<span class="line">    <span class="token comment">--  |  -被命名为: 剑1</span></span>
<span class="line">    <span class="token comment">--  1个 白色潜影盒[特殊值=0] 物品方块属性:[]</span></span>
<span class="line">    <span class="token comment">--  |  -包含子容器: </span></span>
<span class="line">    <span class="token comment">--  |   容器内容:</span></span>
<span class="line">    <span class="token comment">--  |     1个 书与笔[特殊值=0]</span></span>
<span class="line">    <span class="token comment">--  |     |  -信息:书名:  作者:  页数: 3</span></span>
<span class="line">    <span class="token comment">--  |     1个 minecraft:written_book[特殊值=0]</span></span>
<span class="line">    <span class="token comment">--  |     |  -信息:书名: 有名之书 作者: 无名之人 页数: 3</span></span>
<span class="line">    <span class="token comment">--  |     1个 minecraft:written_book[特殊值=0]</span></span>
<span class="line">    <span class="token comment">--  |     |  -信息:书名: 有名之书 作者: 无名之人 页数: 3</span></span>
<span class="line">    <span class="token comment">--  |     |  -被命名为: 铁砧 false</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">-- 现在，你可以安全的操作这个json了，用任何你喜欢的方式，比如我在这里要把第0格的东西复制一份放在第5格</span></span>
<span class="line">        <span class="token keyword">local</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>supported_json_str<span class="token punctuation">)</span></span>
<span class="line">        data<span class="token punctuation">[</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span>json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">-- 当然，你也可以读取其中的一个槽或者里面的物品信息，并用易于读取的方式显示他们</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>coromega<span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;container_slot_data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">        <span class="token comment">-- 5个 石头[特殊值=0] 物品方块属性:[&quot;stone_type&quot;=&quot;stone&quot;]</span></span>
<span class="line">        <span class="token comment">-- -基础属性:</span></span>
<span class="line">        <span class="token comment">--  可被放置于:  草方块 石头 false</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>coromega<span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;item&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;item_data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">        <span class="token comment">-- 石头[特殊值=0] 物品方块属性:[&quot;stone_type&quot;=&quot;stone&quot;]</span></span>
<span class="line">        <span class="token comment">-- -基础属性:</span></span>
<span class="line">        <span class="token comment">--  可被放置于:  草方块 石头 false</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- 你可以进行任何你喜欢的操作，只需要记得把它变回 json_str </span></span>
<span class="line">    supported_json_str <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- 那么，现在，boom，该生成这个箱子了!</span></span>
<span class="line">    <span class="token keyword">local</span> err<span class="token operator">=</span>coromega<span class="token punctuation">:</span><span class="token function">gen_container</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">=</span><span class="token number">1036</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">104</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">1038</span><span class="token punctuation">}</span><span class="token punctuation">,</span>supported_json_str<span class="token punctuation">,</span><span class="token string">&quot;chest [\\&quot;facing_direction\\&quot;=4]&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err<span class="token operator">~=</span><span class="token keyword">nil</span> <span class="token keyword">then</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;出现错误: &quot;</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;成功!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),e=[p];function l(c,u){return a(),s("div",null,e)}const r=n(o,[["render",l],["__file","botAction.html.vue"]]),k=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/botAction/botAction.html","title":"botAction","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"botAction","description":"botAction"},"headers":[{"level":2,"title":"扔出指定快捷栏的物品","slug":"扔出指定快捷栏的物品","link":"#扔出指定快捷栏的物品","children":[]},{"level":2,"title":"生成物品到指定快捷栏","slug":"生成物品到指定快捷栏","link":"#生成物品到指定快捷栏","children":[]},{"level":2,"title":"移动物品","slug":"移动物品","link":"#移动物品","children":[]},{"level":2,"title":"物品改名","slug":"物品改名","link":"#物品改名","children":[]},{"level":2,"title":"物品附魔","slug":"物品附魔","link":"#物品附魔","children":[]},{"level":2,"title":"使用物品","slug":"使用物品","link":"#使用物品","children":[]},{"level":2,"title":"对方块使用物品","slug":"对方块使用物品","link":"#对方块使用物品","children":[]},{"level":2,"title":"获取目标坐标的方块到对应快捷栏","slug":"获取目标坐标的方块到对应快捷栏","link":"#获取目标坐标的方块到对应快捷栏","children":[]},{"level":2,"title":"主手切换","slug":"主手切换","link":"#主手切换","children":[]},{"level":2,"title":"破坏方块并拾取掉落物","slug":"破坏方块并拾取掉落物","link":"#破坏方块并拾取掉落物","children":[]},{"level":2,"title":"获取指定物品栏内物品的信息","slug":"获取指定物品栏内物品的信息","link":"#获取指定物品栏内物品的信息","children":[]},{"level":2,"title":"设置结构方块的内容","slug":"设置结构方块的内容","link":"#设置结构方块的内容","children":[]},{"level":2,"title":"对指定位置下的容器放置内容","slug":"对指定位置下的容器放置内容","link":"#对指定位置下的容器放置内容","children":[]},{"level":2,"title":"根据内容写成书放到对应快捷栏","slug":"根据内容写成书放到对应快捷栏","link":"#根据内容写成书放到对应快捷栏","children":[]},{"level":2,"title":"物品展示框放入物品","slug":"物品展示框放入物品","link":"#物品展示框放入物品","children":[]},{"level":2,"title":"生成内容类型的容器","slug":"生成内容类型的容器","link":"#生成内容类型的容器","children":[{"level":3,"title":"容器支持","slug":"容器支持","link":"#容器支持","children":[]}]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/botAction/botAction.md"}');export{r as comp,k as data};
