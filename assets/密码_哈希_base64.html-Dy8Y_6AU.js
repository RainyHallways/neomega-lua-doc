import{_ as n,c as s,o as a,a as p}from"./app-DJ6fbNhj.js";const e={},t=p(`<h1 id="密码、哈希和-base64-编码相关-api" tabindex="-1"><a class="header-anchor" href="#密码、哈希和-base64-编码相关-api"><span>密码、哈希和 Base64 编码相关 API</span></a></h1><p>基本上，这部分直接使用了 <a href="https://github.com/tengattack/gluacrypto" target="_blank" rel="noopener noreferrer">tengattack/gluacrypto</a> 提供的库</p><p>详细信息和细节请参考 <a href="https://github.com/tengattack/gluacrypto" target="_blank" rel="noopener noreferrer">tengattack/gluacrypto</a> 的实现</p><p>特别的，涉及到加密解密的部分时，您还需有一定密码学基础</p><p>不过，为了方便上手，我们提供了一个示例演示各种可用的 api</p><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> omega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;omega&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> coromega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;coromega&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>omega<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;crypto&quot;</span><span class="token punctuation">)</span> <span class="token comment">-- 先导入库</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_called_by_terminal_menu</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    triggers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;crypto&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    argument_hint <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    usage <span class="token operator">=</span> <span class="token string">&quot;crypto&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">-- base64_encode/decode</span></span>
<span class="line">    <span class="token keyword">local</span> before <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> after_base64_encoding <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">base64_encode</span><span class="token punctuation">(</span>before<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>after_base64_encoding<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> after_base64_decoding <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">base64_decode</span><span class="token punctuation">(</span>after_base64_encoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- base64_url_encode/decode</span></span>
<span class="line">    before <span class="token operator">=</span> <span class="token string">&quot;abcdd&gt;ee?&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> after_base64_encoding <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">base64_url_encode</span><span class="token punctuation">(</span>before<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>after_base64_encoding<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> after_base64_decoding <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">base64_url_decode</span><span class="token punctuation">(</span>after_base64_encoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- md5</span></span>
<span class="line">    <span class="token keyword">local</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>md5<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- sha1</span></span>
<span class="line">    <span class="token keyword">local</span> sha1 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">sha1</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>sha1<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- sha256</span></span>
<span class="line">    <span class="token keyword">local</span> sha256 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">sha256</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>sha256<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- sha512</span></span>
<span class="line">    <span class="token keyword">local</span> sha512 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">sha512</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>sha512<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- crc32</span></span>
<span class="line">    <span class="token keyword">local</span> crc32 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">crc32</span><span class="token punctuation">(</span>after_base64_decoding<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>crc32<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- hmac</span></span>
<span class="line">    <span class="token keyword">local</span> key <span class="token operator">=</span> <span class="token string">&quot;240&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> algorithm <span class="token operator">=</span> <span class="token string">&quot;md5&quot;</span></span>
<span class="line">    <span class="token comment">-- local algorithm=&quot;sha1&quot;</span></span>
<span class="line">    <span class="token comment">-- local algorithm=&quot;sha256&quot;</span></span>
<span class="line">    <span class="token comment">-- local algorithm=&quot;sha512&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> hmac <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">hmac</span><span class="token punctuation">(</span>algorithm<span class="token punctuation">,</span> after_base64_decoding<span class="token punctuation">,</span> key<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;hamc&quot;</span><span class="token punctuation">,</span> hmac<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- encrypt/decrype</span></span>
<span class="line">    <span class="token keyword">local</span> method <span class="token operator">=</span> <span class="token string">&quot;des-ecb&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> key <span class="token operator">=</span> <span class="token string">&quot;key12345&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> iv <span class="token operator">=</span> <span class="token string">&quot;12345678&quot;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- local method=&quot;des-cbc&quot;</span></span>
<span class="line">    <span class="token comment">-- local key=&quot;key12345&quot;</span></span>
<span class="line">    <span class="token comment">-- local iv = &quot;12345678&quot;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- local method=&quot;aes-cbc&quot; -- 这种加密/解密方式对 key 和 iv 的长度有不一样的要求</span></span>
<span class="line">    <span class="token comment">-- local key = &quot;key1234567890123&quot; -- key128</span></span>
<span class="line">    <span class="token comment">-- local iv = &quot;1234567890123456&quot;  -- iv 128</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">local</span> message <span class="token operator">=</span> <span class="token string">&quot;abcdd&gt;ee?&quot;</span></span>
<span class="line">    <span class="token keyword">local</span> options <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token comment">-- local options=crypto.RAW_DATA / crypto.ZERO_PADDING</span></span>
<span class="line">    <span class="token keyword">local</span> cipher <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> method<span class="token punctuation">,</span> key<span class="token punctuation">,</span> options<span class="token punctuation">,</span> iv<span class="token punctuation">)</span> <span class="token comment">-- 加密</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> message <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span> method<span class="token punctuation">,</span> key<span class="token punctuation">,</span> options<span class="token punctuation">,</span> iv<span class="token punctuation">)</span> <span class="token comment">-- 解密</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[t];function o(l,i){return a(),s("div",null,c)}const r=n(e,[["render",o],["__file","密码_哈希_base64.html.vue"]]),k=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/%E5%AF%86%E7%A0%81_%E5%93%88%E5%B8%8C_base64/%E5%AF%86%E7%A0%81_%E5%93%88%E5%B8%8C_base64.html","title":"密码、哈希和 Base64 编码","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"密码、哈希和 Base64 编码","description":"密码、哈希和 Base64 编码"},"headers":[],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/密码_哈希_base64/密码_哈希_base64.md"}');export{r as comp,k as data};
