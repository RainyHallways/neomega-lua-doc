import{_ as e,c as a,o as c,a as o}from"./app-DJ6fbNhj.js";const p={},d=o(`<h1 id="在分发时保护你的代码" tabindex="-1"><a class="header-anchor" href="#在分发时保护你的代码"><span>在分发时保护你的代码</span></a></h1><p>我们倡导开源免费</p><p>但是，如果一些用户希望分发自己的代码而不被看到内容/修改</p><p>以及希望限制插件应用的范围，我们同样提供相关的支持</p><h2 id="两个保护方向" tabindex="-1"><a class="header-anchor" href="#两个保护方向"><span>两个保护方向</span></a></h2><h3 id="保护代码内容" tabindex="-1"><a class="header-anchor" href="#保护代码内容"><span>保护代码内容</span></a></h3><blockquote><p>防止被解密，读取，修改，抄袭</p></blockquote><p>我们提供了 Lua 插件加密 的帮助插件来加密 lua 插件代码</p><p>请先检查 Lua 插件加密 是否打开</p><p>接着使用该功能 (默认命令为 enclua ) 并选择要被加密的 lua 代码</p><p>该功能随后将扫描 data 文件夹下的 <code>所有可用的公钥文件</code> 并使用加密此 lua 代码</p><p>加密后的 lua 代码使用方式和原 lua 代码完全相同，但只在安装了 <code>上述公钥文件对应的私钥文件</code> 的设备上才能正常使用</p><p>!!! ⚠️ 风险警告 ⚠️ !!! 任何 持有 <code>上述公钥文件对应的私钥文件</code> 的人都可以解密并读取您的代码</p><p>您必须 <code>谨慎的确认</code> data 文件夹下的 <code>所有可用的公钥文件</code> 中 <code>任一公钥文件</code> 对应的 <code>私钥文件</code> 持有者 <code>负责任的使用</code> 其持有的 <code>私钥文件</code></p><p>包括但不限于：<code>不慎向其他人透露私钥文件</code> <code>使用私钥文件窃取您的代码</code></p><h4 id="例子-合理的运用方式" tabindex="-1"><a class="header-anchor" href="#例子-合理的运用方式"><span>例子：合理的运用方式</span></a></h4><p>您的 data 文件夹下存在两个公钥文件：<code>您的自用公钥</code> 和 <code>云裳的公钥</code></p><p>您小心的保管 您的<code>私钥</code> 不向任何人透露它，但是可以随意的把您的 <code>公钥</code> 给其他人</p><p>云裳的私钥在 240 手上，同时在 240 编写的云裳后台中，用户启动云裳面板的时候 <code>私钥</code> 被注入到面板程序的同时文件也被销毁以避免用户获得此密钥</p><p>你 <code>相信</code> 240 <code>不会不负责任的使用云裳的私钥</code> 并<code>相信</code>编写的程序确实没有问题，<code>私钥在被注入的同时文件已经被销毁所以用户无法获得此私钥</code></p><p>接着，你把此加密插件给了某一云裳用户，此用户因为<code>没有云裳的私钥</code>所以无法解密你的插件或去剽窃其中的内容，但是他却可以在云裳的面板上使用此插件</p><p>因为<code>私钥被注入到Omega当中并销毁其余副本，但 omega 不会向用户透露私钥</code></p><h4 id="例子-一般使用场景" tabindex="-1"><a class="header-anchor" href="#例子-一般使用场景"><span>例子：一般使用场景</span></a></h4><p>首先，你肯定是不希望别人看到你的代码，或者修改你的代码。</p><p>你希望的是别人在<code>没法看到你写的代码的同时可以执行你的代码</code></p><p>我们接着 <strong>例子：合理的运用方式</strong> 讲</p><p>现在有一个云裳的用户，他不知道云裳的私钥，也不知道云裳的公钥</p><p>不过这不是问题，因为你有云裳的<code>公钥</code></p><p>你把<code>云裳的公钥</code>放到 data 文件夹下并加密</p><p>随后把这个文件给那个云裳的用户</p><p>那用户可以像使用普通 lua 文件一样在云裳的面板上执行你给他的加密 lua 代码</p><p>但是他并不能在其他<code>非云裳面板上</code>执行或使用此代码，也不能在<code>任何地方</code>看到你的真实代码或修改你的代码</p><p>至于其他用户？</p><p>他们无法在<code>任何地方</code>执行你的代码、看到你的真实代码或修改你的代码</p><h4 id="例子-危险的运用方式" tabindex="-1"><a class="header-anchor" href="#例子-危险的运用方式"><span>例子：危险的运用方式</span></a></h4><p>您的 data 文件夹下存在两个公钥文件：<code>您的自用公钥</code> 、 <code>云裳的公钥</code> 、<code>小黑的公钥</code> 、<code>泯灭帮的公钥</code> （假设泯灭帮也在卖面板）</p><p>以下任意事件发生都可能导致您的代码被剽窃</p><p>小黑没有保管好他的<code>私钥</code>泄漏了，或者他就不是好人，使用他自己的<code>私钥</code>解密了你的插件然后直接剽窃</p><p>泯灭帮的程序存在问题，导致其用户在使用他的面板时发现了被他们 <code>不慎泄漏</code> 的私钥</p><p>或者他们就不是好人，使用他们的<code>私钥</code>解密了你的插件然后直接剽窃</p><h4 id="加密方式" tabindex="-1"><a class="header-anchor" href="#加密方式"><span>加密方式</span></a></h4><p>解释加密方式可以帮助有相关知识的人更好的理解其安全性</p><p>首先，一个对称密钥被生成，然后使用此对称密钥加密了插件代码 (AES 算法) (加密文件的第二行)</p><p>此时，保护的目标变成此对称密钥</p><p>对于每个 rsa 公钥，我们使用该 rsa 公钥加密此对称密钥，并记录在第 3、4、5 ... 行</p><h3 id="限制插件可运行的地方" tabindex="-1"><a class="header-anchor" href="#限制插件可运行的地方"><span>限制插件可运行的地方</span></a></h3><blockquote><p>防止插件被倒卖和在未授权的服务器上运行或被未授权的用户使用</p></blockquote><p>我们提供了一个 API，可以获得：</p><ul><li>用户 Token 的 MD5</li><li>服务器号 MD5</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>coromega<span class="token punctuation">:</span><span class="token function">user_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之所以使用 md5 是为了保护用户的真实信息被部分动机不良的插件恶意窃取或利用</p>`,51),n=[d];function s(t,l){return c(),a("div",null,n)}const r=e(p,[["render",s],["__file","在分发时保护你的代码.html.vue"]]),h=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/%E5%9C%A8%E5%88%86%E5%8F%91%E6%97%B6%E4%BF%9D%E6%8A%A4%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81/%E5%9C%A8%E5%88%86%E5%8F%91%E6%97%B6%E4%BF%9D%E6%8A%A4%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81.html","title":"在分发时保护你的代码","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"在分发时保护你的代码","description":"在分发时保护你的代码"},"headers":[{"level":2,"title":"两个保护方向","slug":"两个保护方向","link":"#两个保护方向","children":[{"level":3,"title":"保护代码内容","slug":"保护代码内容","link":"#保护代码内容","children":[]},{"level":3,"title":"限制插件可运行的地方","slug":"限制插件可运行的地方","link":"#限制插件可运行的地方","children":[]}]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/在分发时保护你的代码/在分发时保护你的代码.md"}');export{r as comp,h as data};
