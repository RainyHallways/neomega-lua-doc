import{_ as s,c as n,o as a,a as t}from"./app-DJ6fbNhj.js";const p={},e=t(`<h1 id="http-相关-api" tabindex="-1"><a class="header-anchor" href="#http-相关-api"><span>HTTP 相关 API</span></a></h1><h2 id="http-request" tabindex="-1"><a class="header-anchor" href="#http-request"><span>HTTP request</span></a></h2><ul><li>http_request (method,url,option) <ul><li>范围：协程内</li><li>参数： <ul><li>method: 方法 get/post/put/delete/head/patch</li><li>url: 字符串形式地址</li><li>option: 可不填，或参考 https://github.com/cjoudrey/gluahttp 的选项，http 模块为 gluahttp 的异步版本</li></ul></li><li>返回： <ul><li>请求结果对象，包含以下成员 <ul><li>status_code: 状态码</li><li>headers: 响应头</li><li>body_size: body 长度</li><li>body: body</li><li>cookies</li><li>url</li></ul></li><li>字符串形式的错误信息 (如果有)</li></ul></li></ul></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">  <span class="token keyword">local</span> response<span class="token punctuation">,</span> error_message <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">http_request</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      query <span class="token operator">=</span> <span class="token string">&quot;page=1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      timeout <span class="token operator">=</span> <span class="token string">&quot;30s&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">          Accept <span class="token operator">=</span> <span class="token string">&quot;*/*&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> error_message <span class="token keyword">then</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request error: &quot;</span><span class="token punctuation">,</span> error_message<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">else</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response status_code: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response headers: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response body_size: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>body_size<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response body: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>body<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response cookies: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response url: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line">  <span class="token keyword">local</span> response<span class="token punctuation">,</span> error_message <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">http_request</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http-get" tabindex="-1"><a class="header-anchor" href="#http-get"><span>HTTP get</span></a></h2><ul><li>http_get(url,option) 等效于：http_request(&quot;get&quot;,url,option)</li></ul><h2 id="http-post" tabindex="-1"><a class="header-anchor" href="#http-post"><span>HTTP post</span></a></h2><ul><li>http_post(url,option) 等效于：http_request(&quot;post&quot;,url,option)</li></ul><h2 id="http-put" tabindex="-1"><a class="header-anchor" href="#http-put"><span>HTTP put</span></a></h2><ul><li>http_put(url,option) 等效于：http_request(&quot;out&quot;,url,option)</li></ul><h2 id="http-delete" tabindex="-1"><a class="header-anchor" href="#http-delete"><span>HTTP delete</span></a></h2><ul><li>http_delete(url,option) 等效于：http_request(&quot;delete&quot;,url,option)</li></ul><h2 id="http-head" tabindex="-1"><a class="header-anchor" href="#http-head"><span>HTTP head</span></a></h2><ul><li>http_head(url,option) 等效于：http_request(&quot;head&quot;,url,option)</li></ul><h2 id="http-patch" tabindex="-1"><a class="header-anchor" href="#http-patch"><span>HTTP patch</span></a></h2><ul><li>http_patch(url,option) 等效于：http_request(&quot;patch&quot;,url,option)</li></ul><h2 id="综合使用" tabindex="-1"><a class="header-anchor" href="#综合使用"><span>综合使用</span></a></h2><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> omega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;omega&quot;</span><span class="token punctuation">)</span></span>
<span class="line">package<span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;%s;%s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span></span>
<span class="line">    package<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">    omega<span class="token punctuation">.</span>storage_path<span class="token punctuation">.</span><span class="token function">get_code_path</span><span class="token punctuation">(</span><span class="token string">&quot;LuaLoader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?.lua&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> coromega <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;coromega&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>omega<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">local</span> response<span class="token punctuation">,</span> error_message <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">http_request</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        query <span class="token operator">=</span> <span class="token string">&quot;page=1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        timeout <span class="token operator">=</span> <span class="token string">&quot;30s&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            Accept <span class="token operator">=</span> <span class="token string">&quot;*/*&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> error_message <span class="token keyword">then</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request error: &quot;</span><span class="token punctuation">,</span> error_message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response status_code: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response headers: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response body_size: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>body_size<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response body: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>body<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response cookies: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;request response url: &quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- or just:</span></span>
<span class="line">    <span class="token comment">-- local response, error_message = coromega:http_get(&quot;http://example.com&quot;, {</span></span>
<span class="line">    <span class="token comment">--     query = &quot;page=1&quot;,</span></span>
<span class="line">    <span class="token comment">--     timeout = &quot;30s&quot;,</span></span>
<span class="line">    <span class="token comment">--     headers = {</span></span>
<span class="line">    <span class="token comment">--         Accept = &quot;*/*&quot;</span></span>
<span class="line">    <span class="token comment">--     }</span></span>
<span class="line">    <span class="token comment">-- })</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">-- or just</span></span>
<span class="line">    <span class="token comment">-- local response, error_message = coromega:http_post(&quot;http://example.com&quot;)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[e];function l(i,c){return a(),n("div",null,o)}const r=s(p,[["render",l],["__file","http.html.vue"]]),d=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/http%E7%9B%B8%E5%85%B3/http.html","title":"HTTP","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"HTTP","description":"HTTP 示例"},"headers":[{"level":2,"title":"HTTP request","slug":"http-request","link":"#http-request","children":[]},{"level":2,"title":"HTTP get","slug":"http-get","link":"#http-get","children":[]},{"level":2,"title":"HTTP post","slug":"http-post","link":"#http-post","children":[]},{"level":2,"title":"HTTP put","slug":"http-put","link":"#http-put","children":[]},{"level":2,"title":"HTTP delete","slug":"http-delete","link":"#http-delete","children":[]},{"level":2,"title":"HTTP head","slug":"http-head","link":"#http-head","children":[]},{"level":2,"title":"HTTP patch","slug":"http-patch","link":"#http-patch","children":[]},{"level":2,"title":"综合使用","slug":"综合使用","link":"#综合使用","children":[]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/http相关/http.md"}');export{r as comp,d as data};
