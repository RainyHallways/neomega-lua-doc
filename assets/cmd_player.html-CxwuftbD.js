import{_ as n,c as a,o as s,a as l}from"./app-DJ6fbNhj.js";const e={},t=l(`<h1 id="玩家交互-聊天和命令块消息监听相关-api" tabindex="-1"><a class="header-anchor" href="#玩家交互-聊天和命令块消息监听相关-api"><span>玩家交互&amp;聊天和命令块消息监听相关 API</span></a></h1><h2 id="获取玩家对象" tabindex="-1"><a class="header-anchor" href="#获取玩家对象"><span>获取玩家对象</span></a></h2><h3 id="通过名字或-uuid-获取" tabindex="-1"><a class="header-anchor" href="#通过名字或-uuid-获取"><span>通过名字或 uuid 获取</span></a></h3><ul><li>get_player(uuid_string_or_name) <ul><li>范围：任意</li><li>说明：获取指定名字或 uuid 的玩家对象</li><li>参数： <ul><li>name:玩家名</li></ul></li><li>返回值:player 对象</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> player <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_player</span><span class="token punctuation">(</span><span class="token string">&quot;2401pt&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> player <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_player</span><span class="token punctuation">(</span><span class="token string">&quot;xxxxxxxx&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="通过名字获取玩家对象" tabindex="-1"><a class="header-anchor" href="#通过名字获取玩家对象"><span>通过名字获取玩家对象</span></a></h3><ul><li>get_player_by_name(player_name) <ul><li>范围：任意</li><li>说明：获取指定名字的获取玩家对象</li><li>参数： <ul><li>player_name:玩家名</li></ul></li><li>返回值：玩家对象</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> player <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_player_by_name</span><span class="token punctuation">(</span><span class="token string">&quot;2401pt&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="通过-uuid-获取玩家对象" tabindex="-1"><a class="header-anchor" href="#通过-uuid-获取玩家对象"><span>通过 uuid 获取玩家对象</span></a></h3><ul><li>get_player_by_uuid_string(uuid_string) <ul><li>范围：任意</li><li>说明：获取指定 uuid 的玩家对象</li><li>参数： <ul><li>uuid_string:uuid 字符串</li></ul></li><li>返回值：玩家对象</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> player <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_player_by_uuid_string</span><span class="token punctuation">(</span><span class="token string">&quot;xxxxxxxx&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="获取所有在线玩家对象" tabindex="-1"><a class="header-anchor" href="#获取所有在线玩家对象"><span>获取所有在线玩家对象</span></a></h2><ul><li>get_all_online_players() <ul><li>范围：任意</li><li>说明：获取所有在线玩家的玩家对象</li><li>参数：无</li><li>返回值：玩家对象数组</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> players <span class="token operator">=</span> coromega<span class="token punctuation">:</span><span class="token function">get_all_online_players</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="接收命令消息事件" tabindex="-1"><a class="header-anchor" href="#接收命令消息事件"><span>接收命令消息事件</span></a></h2><ul><li>when_receive_msg_from_command_block_named(command_block_name) <ul><li>范围：任意</li><li>说明：当收到命令块消息时，启动一个新协程并执行指定函数</li><li>参数： <ul><li>command_block_name:命令块名字</li></ul></li><li>返回值：监听器 -含有方法:start_new(function) <blockquote><p>允许在监听器触发时启动函数并且放入新的协程</p></blockquote></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token comment">-- 命令块命名为 &quot;扫地机&quot;，指令为 tell 机器人名字 去扫地</span></span>
<span class="line"><span class="token comment">-- 当收到命令块的消息时，执行回调</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_receive_msg_from_command_block_named</span><span class="token punctuation">(</span><span class="token string">&quot;扫地机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;command block (%s) chat: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;扫地机&quot;</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="实体消息事件" tabindex="-1"><a class="header-anchor" href="#实体消息事件"><span>实体消息事件</span></a></h2><ul><li>when_receive_msg_from_sender_named(name) <ul><li>范围：任意</li><li>说明：当收到指定名字的消息时，这个名字可以是物品名，启动一个新协程并执行指定函数</li><li>参数： <ul><li>name:发送者名字</li></ul></li><li>返回值：监听器 -含有方法:start_new(function) <blockquote><p>允许在监听器触发时启动函数并且放入新的协程</p></blockquote></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token comment">-- 命令块指令为 execute @e[type=snowball] ~ ~ ~ tell 机器人名字 @p[r=3]</span></span>
<span class="line"><span class="token comment">-- 当收到命令块的消息时，执行回调</span></span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_receive_msg_from_sender_named</span><span class="token punctuation">(</span><span class="token string">&quot;雪球&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;item (%s) chat: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;雪球&quot;</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="聊天消息事件" tabindex="-1"><a class="header-anchor" href="#聊天消息事件"><span>聊天消息事件</span></a></h2><ul><li>when_chat_msg() <ul><li>范围：任意</li><li>说明：当收到聊天消息时，启动一个新协程并执行指定函数</li><li>返回值：监听器 -含有方法:start_new(function) <blockquote><p>允许在监听器触发时启动函数并且放入新的协程</p></blockquote></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_chat_msg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;chat sender: %s &gt; %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>name<span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>chat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="玩家在线状态变化事件" tabindex="-1"><a class="header-anchor" href="#玩家在线状态变化事件"><span>玩家在线状态变化事件</span></a></h2><ul><li>when_player_change() <ul><li>范围：任意</li><li>当玩家的在线情况发生变化时，启动一个新协程并执行指定函数</li><li>返回值：监听器 -含有方法:start_new(function) <blockquote><p>允许在监听器触发时启动函数并且放入新的协程 player 是一个玩家对象</p></blockquote></li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">coromega<span class="token punctuation">:</span><span class="token function">when_player_change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">start_new</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>player<span class="token punctuation">,</span> action<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> action <span class="token operator">==</span> <span class="token string">&quot;exist&quot;</span> <span class="token keyword">then</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;player %s 已经在线&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>player<span class="token punctuation">:</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elseif</span> action <span class="token operator">==</span> <span class="token string">&quot;online&quot;</span> <span class="token keyword">then</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;player %s 新上线&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>player<span class="token punctuation">:</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elseif</span> action <span class="token operator">==</span> <span class="token string">&quot;offline&quot;</span> <span class="token keyword">then</span></span>
<span class="line">        coromega<span class="token punctuation">:</span><span class="token function">log_and_print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;player %s 下线&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">format</span><span class="token punctuation">(</span>player<span class="token punctuation">:</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="player-对象的函数" tabindex="-1"><a class="header-anchor" href="#player-对象的函数"><span>player 对象的函数</span></a></h2><h3 id="发送消息" tabindex="-1"><a class="header-anchor" href="#发送消息"><span>发送消息</span></a></h3><ul><li>say(msg) <ul><li>范围：任意</li><li>说明：向指定玩家来发送消息</li><li>参数： <ul><li>msg:消息字符串</li></ul></li><li>返回值：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="发送-tell" tabindex="-1"><a class="header-anchor" href="#发送-tell"><span>发送 tell</span></a></h3><ul><li>raw_say(msg) <ul><li>范围：任意</li><li>说明：向指定玩家来发送 tell raw 消息，这个消息应当是一个对象</li><li>参数： <ul><li>msg: 对象，被 json.encode 之后应该符合 tell raw 的规范</li></ul></li><li>返回值：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">raw_say</span><span class="token punctuation">(</span><span class="token punctuation">{</span>rawtext<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>text<span class="token operator">=</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="获取输入" tabindex="-1"><a class="header-anchor" href="#获取输入"><span>获取输入</span></a></h3><ul><li>ask(hint,timeout) <ul><li>范围：协程内</li><li>说明：获取指定玩家的输入</li><li>参数： <ul><li>hint:提示给玩家的信息</li><li>timeout:输入超时，超时时返回为 nil</li></ul></li><li>返回值：输入的内容</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> input <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">ask</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> input <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">ask</span><span class="token punctuation">(</span><span class="token string">&quot;请输入：&quot;</span><span class="token punctuation">,</span><span class="token number">6.2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> input <span class="token operator">==</span><span class="token keyword">nil</span> <span class="token keyword">then</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;timeout!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="发送标题-title" tabindex="-1"><a class="header-anchor" href="#发送标题-title"><span>发送标题（title）</span></a></h3><ul><li>title(title,subtitle) <ul><li>范围：任意</li><li>说明：发送标题</li><li>参数： <ul><li>title:标题</li><li>subtitle:副标题</li></ul></li><li>返回值：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="发送副标题" tabindex="-1"><a class="header-anchor" href="#发送副标题"><span>发送副标题</span></a></h3><ul><li>subtitle(subtitle,title) <ul><li>范围：任意</li><li>说明：发送副标题 如果主标题为 nil 则不会显示 subtitle</li><li>参数： <ul><li>subtitle:副标题</li><li>title:标题</li></ul></li><li>返回值：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">subtitle</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="发送-action-bar" tabindex="-1"><a class="header-anchor" href="#发送-action-bar"><span>发送 action_bar</span></a></h3><ul><li>action_bar(msg) <ul><li>范围：任意</li><li>说明：发送 actionbar</li><li>参数： <ul><li>msg:消息</li></ul></li><li>返回值：无</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">action_bar</span><span class="token punctuation">(</span><span class="token string">&quot;hi&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="获得玩家坐标和维度" tabindex="-1"><a class="header-anchor" href="#获得玩家坐标和维度"><span>获得玩家坐标和维度</span></a></h3><ul><li>get_pos() <ul><li>范围：协程内</li><li>说明：获得玩家坐标和维度 (实际上是 query player 的包装)</li><li>返回值:{position:{x:float,y:float,z=float},dimension:int}</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> pos <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_pos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>position</span>
<span class="line"><span class="token keyword">local</span> x <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> y <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> z <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>z<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> dimension<span class="token operator">=</span>player<span class="token punctuation">:</span><span class="token function">get_pos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dimension</span>
<span class="line">coromega<span class="token punctuation">:</span><span class="token function">print</span><span class="token punctuation">(</span>dimension<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="判断玩家条件" tabindex="-1"><a class="header-anchor" href="#判断玩家条件"><span>判断玩家条件</span></a></h3><ul><li>check(conditions) <ul><li>范围：协程内</li><li>说明：检查玩家是否满足条件 为条件限制器效果:@a[xxxxxxxx]</li><li>参数： <ul><li>conditions:条件字符串 列如:{ &quot;m=c&quot;, &quot;tag=!no_omega&quot;,&quot;tag=!ban&quot; } 其会被拼装为指令 querytarget @a[name=玩家名，m=c,tag=!no_omega,tag=!ban]</li></ul></li><li>返回值：是否满足条件</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> result <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;m=c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tag=!ban&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tag=!ban&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> result <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;m=c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家-uuid" tabindex="-1"><a class="header-anchor" href="#获取玩家-uuid"><span>获取玩家 uuid</span></a></h3><ul><li>uuid_string() <ul><li>范围：协程内</li><li>说明：获取玩家的 uuid 字符串</li><li>参数：无</li><li>返回值:uuid 字符串，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> uuid <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">uuid_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> uuid<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">uuid_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家名字" tabindex="-1"><a class="header-anchor" href="#获取玩家名字"><span>获取玩家名字</span></a></h3><ul><li>name() <ul><li>范围：协程内</li><li>说明：获取玩家的名字</li><li>参数：无</li><li>返回值：玩家名，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> name <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> name<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家-id" tabindex="-1"><a class="header-anchor" href="#获取玩家-id"><span>获取玩家 id</span></a></h3><ul><li>entity_unique_id() <ul><li>范围：协程内</li><li>说明：获取玩家的实体唯一 id</li><li>参数：无</li><li>返回值：实体唯一 id，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> id <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">entity_unique_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> id<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">entity_unique_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家登录时间" tabindex="-1"><a class="header-anchor" href="#获取玩家登录时间"><span>获取玩家登录时间</span></a></h3><ul><li>login_time() <ul><li>范围：协程内</li><li>说明：获取玩家的登录时间 (unix time)，其类型与 :now() 一致，单位秒</li><li>参数：无</li><li>返回值：登录时间，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> time <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">login_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> time<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">login_time</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家平台聊天-id" tabindex="-1"><a class="header-anchor" href="#获取玩家平台聊天-id"><span>获取玩家平台聊天 id</span></a></h3><ul><li>platform_chat_id() <ul><li>范围：协程内</li><li>说明：获取玩家的平台聊天 id</li><li>参数：无</li><li>返回值：平台聊天 id，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> id <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">platform_chat_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> id<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">platform_chat_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家皮肤-id" tabindex="-1"><a class="header-anchor" href="#获取玩家皮肤-id"><span>获取玩家皮肤 id</span></a></h3><ul><li>skin_id() <ul><li>范围：协程内</li><li>说明：获取玩家的皮肤 id</li><li>参数：无</li><li>返回值：皮肤 id，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> id <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">skin_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> id<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">skin_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家设备-id" tabindex="-1"><a class="header-anchor" href="#获取玩家设备-id"><span>获取玩家设备 id</span></a></h3><ul><li>device_id() <ul><li>范围：协程内</li><li>说明：获取玩家的设备 id</li><li>参数：无</li><li>返回值：设备 id，是否获得了该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> id<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">device_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家-runtimeid" tabindex="-1"><a class="header-anchor" href="#获取玩家-runtimeid"><span>获取玩家 runtimeId</span></a></h3><ul><li>entity_runtime_id() <ul><li>范围：协程内</li><li>说明：获取玩家实体的 runtime_id</li><li>参数：无</li><li>返回值:runtime_id，是否获得了该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> id<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">entity_runtime_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="获取玩家实体元数据" tabindex="-1"><a class="header-anchor" href="#获取玩家实体元数据"><span>获取玩家实体元数据</span></a></h3><ul><li>entity_metadata() <ul><li>范围：协程内</li><li>说明：获取玩家实体的元数据，是否获得了该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> metadata<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">entity_metadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家放置方块权限" tabindex="-1"><a class="header-anchor" href="#读取玩家放置方块权限"><span>读取玩家放置方块权限</span></a></h3><ul><li>get_build_ability() <ul><li>范围：协程内</li><li>说明：获取玩家放置方块权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_build_or_place_blocks<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_build_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家放置方块权限" tabindex="-1"><a class="header-anchor" href="#设置玩家放置方块权限"><span>设置玩家放置方块权限</span></a></h3><ul><li>set_build_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家放置方块权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_build_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家破坏方块权限" tabindex="-1"><a class="header-anchor" href="#读取玩家破坏方块权限"><span>读取玩家破坏方块权限</span></a></h3><ul><li>get_mine_ability() <ul><li>范围：协程内</li><li>说明：获取玩家破坏方块权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_mine_or_break_blocks<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_mine_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家破坏方块权限" tabindex="-1"><a class="header-anchor" href="#设置玩家破坏方块权限"><span>设置玩家破坏方块权限</span></a></h3><ul><li>set_mine_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家破坏方块权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_mine_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家操作门和开关权限" tabindex="-1"><a class="header-anchor" href="#读取玩家操作门和开关权限"><span>读取玩家操作门和开关权限</span></a></h3><ul><li>get_door_and_switches_ability() <ul><li>范围：协程内</li><li>说明：获取玩家操作门和开关权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_interact_with_door_and_switches<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_door_and_switches_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家操作门和开关权限" tabindex="-1"><a class="header-anchor" href="#设置玩家操作门和开关权限"><span>设置玩家操作门和开关权限</span></a></h3><ul><li>set_door_and_switches_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家操作门和开关权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_door_and_switches_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家打开容器权限" tabindex="-1"><a class="header-anchor" href="#读取玩家打开容器权限"><span>读取玩家打开容器权限</span></a></h3><ul><li>get_open_container_ability() <ul><li>范围：协程内</li><li>说明：获取玩家打开容器权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_open_container<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_open_container_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家打开容器权限" tabindex="-1"><a class="header-anchor" href="#设置玩家打开容器权限"><span>设置玩家打开容器权限</span></a></h3><ul><li>set_open_container_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家打开容器权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_open_container_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家攻击其他玩家权限" tabindex="-1"><a class="header-anchor" href="#读取玩家攻击其他玩家权限"><span>读取玩家攻击其他玩家权限</span></a></h3><ul><li>get_attack_player_ability() <ul><li>范围：协程内</li><li>说明：获取玩家攻击其他玩家权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_attack_player<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_attack_player_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家攻击其他玩家权限" tabindex="-1"><a class="header-anchor" href="#设置玩家攻击其他玩家权限"><span>设置玩家攻击其他玩家权限</span></a></h3><ul><li>set_attack_player_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家攻击其他玩家权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_attack_player_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家攻击生物权限" tabindex="-1"><a class="header-anchor" href="#读取玩家攻击生物权限"><span>读取玩家攻击生物权限</span></a></h3><ul><li>get_attack_mobs_ability() <ul><li>范围：协程内</li><li>说明：获取玩家攻击生物权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_attack_mobs<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_attack_mobs_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家攻击生物权限" tabindex="-1"><a class="header-anchor" href="#设置玩家攻击生物权限"><span>设置玩家攻击生物权限</span></a></h3><ul><li>set_attack_mobs_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家攻击生物权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_attack_mobs_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家命令权限-同-op-权限" tabindex="-1"><a class="header-anchor" href="#读取玩家命令权限-同-op-权限"><span>读取玩家命令权限 (同 op 权限)</span></a></h3><ul><li>get_operator_command_ability() <ul><li>范围：协程内</li><li>说明：获取玩家命令权限 (同 op 权限)，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_send_operator_command<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_operator_command_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家命令权限" tabindex="-1"><a class="header-anchor" href="#设置玩家命令权限"><span>设置玩家命令权限</span></a></h3><ul><li>set_operator_command_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家命令权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_operator_command_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家传送权限" tabindex="-1"><a class="header-anchor" href="#读取玩家传送权限"><span>读取玩家传送权限</span></a></h3><ul><li>get_teleport_ability() <ul><li>范围：协程内</li><li>说明：获取玩家传送权限，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> can_teleport<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_teleport_ability</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="设置玩家传送权限" tabindex="-1"><a class="header-anchor" href="#设置玩家传送权限"><span>设置玩家传送权限</span></a></h3><ul><li>set_teleport_ability(allow) <ul><li>范围：协程内</li><li>说明：设置玩家传送权限</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line">player<span class="token punctuation">:</span><span class="token function">set_teleport_ability</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家飞行状态" tabindex="-1"><a class="header-anchor" href="#读取玩家飞行状态"><span>读取玩家飞行状态</span></a></h3><ul><li>get_flying_status() <ul><li>范围：协程内</li><li>说明：获取玩家飞行状态，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> is_flying<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_flying_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="读取玩家无敌-不受伤害-状态" tabindex="-1"><a class="header-anchor" href="#读取玩家无敌-不受伤害-状态"><span>读取玩家无敌 (不受伤害) 状态</span></a></h3><ul><li>get_invulnerable_status() <ul><li>范围：协程内</li><li>说明：获取玩家无敌 (不受伤害)，是否获得该信息</li><li>参数：无</li><li>返回值：元数据</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> is_invulnerable<span class="token punctuation">,</span> found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">get_invulnerable_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="判断是否为-op" tabindex="-1"><a class="header-anchor" href="#判断是否为-op"><span>判断是否为 op</span></a></h3><ul><li>is_op() <ul><li>范围：协程内</li><li>说明：判断玩家是否为 op</li><li>参数：无</li><li>返回值：是否为 op，是否获得该信息</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> result <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">is_op</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">local</span> result<span class="token punctuation">,</span>found <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">is_op</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="判断是否在线" tabindex="-1"><a class="header-anchor" href="#判断是否在线"><span>判断是否在线</span></a></h3><ul><li>is_online() <ul><li>范围：协程内</li><li>说明：判断玩家是否在线</li><li>参数：无</li><li>返回值：是否在线</li></ul><div class="language-lua line-numbers-mode" data-highlighter="prismjs" data-ext="lua" data-title="lua"><pre><code><span class="line"><span class="token keyword">local</span> result <span class="token operator">=</span> player<span class="token punctuation">:</span><span class="token function">is_online</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul>`,93),i=[t];function p(o,c){return s(),a("div",null,i)}const r=n(e,[["render",p],["__file","cmd_player.html.vue"]]),d=JSON.parse('{"path":"/lua%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/%E7%8E%A9%E5%AE%B6%E4%BA%A4%E4%BA%92%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%96%B9%E5%9D%97API/cmd_player.html","title":"玩家交互","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"玩家交互","description":"命令示例"},"headers":[{"level":2,"title":"获取玩家对象","slug":"获取玩家对象","link":"#获取玩家对象","children":[{"level":3,"title":"通过名字或 uuid 获取","slug":"通过名字或-uuid-获取","link":"#通过名字或-uuid-获取","children":[]},{"level":3,"title":"通过名字获取玩家对象","slug":"通过名字获取玩家对象","link":"#通过名字获取玩家对象","children":[]},{"level":3,"title":"通过 uuid 获取玩家对象","slug":"通过-uuid-获取玩家对象","link":"#通过-uuid-获取玩家对象","children":[]}]},{"level":2,"title":"获取所有在线玩家对象","slug":"获取所有在线玩家对象","link":"#获取所有在线玩家对象","children":[]},{"level":2,"title":"接收命令消息事件","slug":"接收命令消息事件","link":"#接收命令消息事件","children":[]},{"level":2,"title":"实体消息事件","slug":"实体消息事件","link":"#实体消息事件","children":[]},{"level":2,"title":"聊天消息事件","slug":"聊天消息事件","link":"#聊天消息事件","children":[]},{"level":2,"title":"玩家在线状态变化事件","slug":"玩家在线状态变化事件","link":"#玩家在线状态变化事件","children":[]},{"level":2,"title":"player 对象的函数","slug":"player-对象的函数","link":"#player-对象的函数","children":[{"level":3,"title":"发送消息","slug":"发送消息","link":"#发送消息","children":[]},{"level":3,"title":"发送 tell","slug":"发送-tell","link":"#发送-tell","children":[]},{"level":3,"title":"获取输入","slug":"获取输入","link":"#获取输入","children":[]},{"level":3,"title":"发送标题（title）","slug":"发送标题-title","link":"#发送标题-title","children":[]},{"level":3,"title":"发送副标题","slug":"发送副标题","link":"#发送副标题","children":[]},{"level":3,"title":"发送 action_bar","slug":"发送-action-bar","link":"#发送-action-bar","children":[]},{"level":3,"title":"获得玩家坐标和维度","slug":"获得玩家坐标和维度","link":"#获得玩家坐标和维度","children":[]},{"level":3,"title":"判断玩家条件","slug":"判断玩家条件","link":"#判断玩家条件","children":[]},{"level":3,"title":"获取玩家 uuid","slug":"获取玩家-uuid","link":"#获取玩家-uuid","children":[]},{"level":3,"title":"获取玩家名字","slug":"获取玩家名字","link":"#获取玩家名字","children":[]},{"level":3,"title":"获取玩家 id","slug":"获取玩家-id","link":"#获取玩家-id","children":[]},{"level":3,"title":"获取玩家登录时间","slug":"获取玩家登录时间","link":"#获取玩家登录时间","children":[]},{"level":3,"title":"获取玩家平台聊天 id","slug":"获取玩家平台聊天-id","link":"#获取玩家平台聊天-id","children":[]},{"level":3,"title":"获取玩家皮肤 id","slug":"获取玩家皮肤-id","link":"#获取玩家皮肤-id","children":[]},{"level":3,"title":"获取玩家设备 id","slug":"获取玩家设备-id","link":"#获取玩家设备-id","children":[]},{"level":3,"title":"获取玩家 runtimeId","slug":"获取玩家-runtimeid","link":"#获取玩家-runtimeid","children":[]},{"level":3,"title":"获取玩家实体元数据","slug":"获取玩家实体元数据","link":"#获取玩家实体元数据","children":[]},{"level":3,"title":"读取玩家放置方块权限","slug":"读取玩家放置方块权限","link":"#读取玩家放置方块权限","children":[]},{"level":3,"title":"设置玩家放置方块权限","slug":"设置玩家放置方块权限","link":"#设置玩家放置方块权限","children":[]},{"level":3,"title":"读取玩家破坏方块权限","slug":"读取玩家破坏方块权限","link":"#读取玩家破坏方块权限","children":[]},{"level":3,"title":"设置玩家破坏方块权限","slug":"设置玩家破坏方块权限","link":"#设置玩家破坏方块权限","children":[]},{"level":3,"title":"读取玩家操作门和开关权限","slug":"读取玩家操作门和开关权限","link":"#读取玩家操作门和开关权限","children":[]},{"level":3,"title":"设置玩家操作门和开关权限","slug":"设置玩家操作门和开关权限","link":"#设置玩家操作门和开关权限","children":[]},{"level":3,"title":"读取玩家打开容器权限","slug":"读取玩家打开容器权限","link":"#读取玩家打开容器权限","children":[]},{"level":3,"title":"设置玩家打开容器权限","slug":"设置玩家打开容器权限","link":"#设置玩家打开容器权限","children":[]},{"level":3,"title":"读取玩家攻击其他玩家权限","slug":"读取玩家攻击其他玩家权限","link":"#读取玩家攻击其他玩家权限","children":[]},{"level":3,"title":"设置玩家攻击其他玩家权限","slug":"设置玩家攻击其他玩家权限","link":"#设置玩家攻击其他玩家权限","children":[]},{"level":3,"title":"读取玩家攻击生物权限","slug":"读取玩家攻击生物权限","link":"#读取玩家攻击生物权限","children":[]},{"level":3,"title":"设置玩家攻击生物权限","slug":"设置玩家攻击生物权限","link":"#设置玩家攻击生物权限","children":[]},{"level":3,"title":"读取玩家命令权限 (同 op 权限)","slug":"读取玩家命令权限-同-op-权限","link":"#读取玩家命令权限-同-op-权限","children":[]},{"level":3,"title":"设置玩家命令权限","slug":"设置玩家命令权限","link":"#设置玩家命令权限","children":[]},{"level":3,"title":"读取玩家传送权限","slug":"读取玩家传送权限","link":"#读取玩家传送权限","children":[]},{"level":3,"title":"设置玩家传送权限","slug":"设置玩家传送权限","link":"#设置玩家传送权限","children":[]},{"level":3,"title":"读取玩家飞行状态","slug":"读取玩家飞行状态","link":"#读取玩家飞行状态","children":[]},{"level":3,"title":"读取玩家无敌 (不受伤害) 状态","slug":"读取玩家无敌-不受伤害-状态","link":"#读取玩家无敌-不受伤害-状态","children":[]},{"level":3,"title":"判断是否为 op","slug":"判断是否为-op","link":"#判断是否为-op","children":[]},{"level":3,"title":"判断是否在线","slug":"判断是否在线","link":"#判断是否在线","children":[]}]}],"git":{"updatedTime":1727773696000,"contributors":[{"name":"RainyHallways","email":"78735995+RainyHallways@users.noreply.github.com","commits":1}]},"filePathRelative":"lua插件编写/玩家交互与命令方块API/cmd_player.md"}');export{r as comp,d as data};
